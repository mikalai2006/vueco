{"version":3,"file":"FText.23a6b47a.js","sources":["../../src/components/LInput/LInput.ts","../../src/components/ui/FText.vue"],"sourcesContent":["import {\r\n  h,\r\n  defineComponent,\r\n  resolveDirective,\r\n  withDirectives,\r\n  ref,\r\n  watchEffect,\r\n  watch,\r\n  nextTick,\r\n  onMounted,\r\n  Fragment,\r\n} from \"vue\";\r\n\r\nimport type { PropType } from \"vue\";\r\n\r\nimport type { IField } from \"@/components/LForm/LForm\";\r\n\r\nexport const LInputText = defineComponent({\r\n  name: \"LInputText\",\r\n  props: {\r\n    modelValue: {\r\n      type: [String, Number],\r\n      required: true,\r\n      default: \"\",\r\n    },\r\n    field: {\r\n      type: Object as PropType<IField>,\r\n      required: true,\r\n      default: () => {\r\n        return {};\r\n      },\r\n    },\r\n    error: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n  },\r\n  setup(props, { emit }) {\r\n    const autofocus: any = resolveDirective(\"autofocus\");\r\n\r\n    const id = props.field.id || props.field.name;\r\n\r\n    return () =>\r\n      withDirectives(\r\n        h(\"input\", {\r\n          value: props.modelValue,\r\n          id,\r\n          name: id,\r\n          type: \"text\",\r\n          placeholder: props.field.placeholder,\r\n          // autocomplete: \"off\",\r\n          \"aria-labelledby\": `${props.field.name}_label`,\r\n          \"aria-describedby\": props.field.description\r\n            ? `${id}_help`\r\n            : undefined,\r\n          \"aria-invalid\": !!props.error,\r\n          onInput: (e: Event) => {\r\n            const el = e.target as HTMLInputElement;\r\n            emit(\"update:modelValue\", el.value);\r\n          },\r\n        }),\r\n        [[autofocus, { status: props.field.autofocus }]]\r\n      );\r\n  },\r\n});\r\n\r\nexport const LInputNumber = defineComponent({\r\n  name: \"LInputNumber\",\r\n  props: {\r\n    modelValue: {\r\n      type: [Number, String],\r\n      required: true,\r\n      default: 0,\r\n    },\r\n    field: {\r\n      type: Object as PropType<IField>,\r\n      required: true,\r\n      default: () => {\r\n        return {};\r\n      },\r\n    },\r\n    error: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    max: {\r\n      type: Number,\r\n      default: 100,\r\n    },\r\n    min: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n  },\r\n  setup(props, { emit }) {\r\n    const autofocus: any = resolveDirective(\"autofocus\");\r\n\r\n    const id = props.field.id || props.field.name;\r\n\r\n    watchEffect(\r\n      () => {\r\n        // model.value = +props.modelValue\r\n        emit(\"update:modelValue\", +props.modelValue);\r\n        if (props.modelValue > props.max) {\r\n          emit(\"update:modelValue\", props.max);\r\n        }\r\n        if (props.modelValue < props.min) {\r\n          emit(\"update:modelValue\", props.min);\r\n        }\r\n      },\r\n      {\r\n        flush: \"post\",\r\n      }\r\n    );\r\n\r\n    return () =>\r\n      withDirectives(\r\n        h(\"input\", {\r\n          value: props.modelValue,\r\n          id,\r\n          name: id,\r\n          type: \"number\",\r\n          min: props.min,\r\n          max: props.max,\r\n          placeholder: props.field.placeholder,\r\n          \"aria-labelledby\": `${id}_label`,\r\n          \"aria-describedby\": props.field.description\r\n            ? `${id}_help`\r\n            : undefined,\r\n          \"aria-invalid\": !!props.error,\r\n          onInput: (e: Event) => {\r\n            const el = e.target as HTMLInputElement;\r\n            emit(\"update:modelValue\", el.value);\r\n          },\r\n        }),\r\n        [[autofocus, { status: props.field.autofocus }]]\r\n      );\r\n  },\r\n});\r\n\r\nexport const LInputTextarea = defineComponent({\r\n  name: \"LInputTextarea\",\r\n  props: {\r\n    modelValue: {\r\n      type: String,\r\n      required: true,\r\n      default: \"\",\r\n    },\r\n    field: {\r\n      type: Object as PropType<IField>,\r\n      required: true,\r\n    },\r\n    error: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n  },\r\n  setup(props, { emit, expose }) {\r\n    const autofocus: any = resolveDirective(\"autofocus\");\r\n\r\n    const id = props.field.id || props.field.name;\r\n\r\n    const el = ref<HTMLInputElement | null>(null);\r\n    const onResize = () => {\r\n      if (el.value) {\r\n        const css = window.getComputedStyle(el.value, null);\r\n        const { borderTopWidth, borderBottomWidth } = css;\r\n        el.value.style.height = \"auto\";\r\n        el.value.style.height =\r\n          el.value.scrollHeight +\r\n          parseInt(borderTopWidth) +\r\n          parseInt(borderBottomWidth) +\r\n          \"px\";\r\n      }\r\n    };\r\n    watch(\r\n      () => props.modelValue,\r\n      () => {\r\n        nextTick(() => onResize());\r\n      }\r\n    );\r\n    onMounted(() => {\r\n      nextTick(() => {\r\n        onResize();\r\n      });\r\n    });\r\n\r\n    expose({ focus: () => el.value?.focus() });\r\n    return () =>\r\n      withDirectives(\r\n        h(\"textarea\", {\r\n          ref: el,\r\n          value: props.modelValue,\r\n          id,\r\n          name: id,\r\n          autocomplete: \"off\",\r\n          placeholder: props.field.placeholder,\r\n          \"aria-labelledby\": `${id}_label`,\r\n          \"aria-describedby\": props.field.description\r\n            ? `${id}_help`\r\n            : undefined,\r\n          \"aria-invalid\": !!props.error,\r\n          onInput: (e: Event) => {\r\n            const el = e.target as HTMLInputElement;\r\n            emit(\"update:modelValue\", el.value);\r\n          },\r\n        }),\r\n        [[autofocus, { status: props.field.autofocus }]]\r\n      );\r\n  },\r\n});\r\n\r\nexport const LInputCheckbox = defineComponent({\r\n  name: \"LInputCheckbox\",\r\n  props: {\r\n    modelValue: {\r\n      type: Boolean,\r\n      required: true,\r\n      default: false,\r\n    },\r\n    field: {\r\n      type: Object as PropType<IField>,\r\n      required: true,\r\n    },\r\n    error: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n  },\r\n  inheritAttrs: false,\r\n  expose: [\"focus\"],\r\n  setup(props, { attrs, slots, emit, expose }) {\r\n    const autofocus: any = resolveDirective(\"autofocus\");\r\n\r\n    const id = props.field.id || props.field.name;\r\n\r\n    const el = ref<HTMLInputElement | null>(null);\r\n\r\n    expose({ focus: () => el.value?.focus() });\r\n\r\n    return () =>\r\n      h(Fragment, {}, [\r\n        withDirectives(\r\n          h(\"input\", {\r\n            ...attrs,\r\n            ref: el,\r\n            value: props.modelValue,\r\n            id,\r\n            name: id,\r\n            type: \"checkbox\",\r\n            \"aria-labelledby\": `${id}_label`,\r\n            \"aria-describedby\": props.field.description\r\n              ? `${id}_help`\r\n              : undefined,\r\n            \"aria-invalid\": !!props.error,\r\n            onInput: (e: Event) => {\r\n              const el = e.target as HTMLInputElement;\r\n              emit(\"update:modelValue\", el.checked);\r\n            },\r\n          }),\r\n          [[autofocus, { status: props.field.autofocus }]]\r\n        ),\r\n        slots.default ? slots.default() : null,\r\n      ]);\r\n  },\r\n});\r\n\r\nexport const LInputCheckboxGroup = defineComponent({\r\n  name: \"LInputCheckboxGroup\",\r\n  props: {\r\n    modelValue: {\r\n      type: Array,\r\n      required: true,\r\n      default: () => [],\r\n    },\r\n    field: {\r\n      type: Object as PropType<IField>,\r\n      required: true,\r\n    },\r\n    error: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n  },\r\n  inheritAttrs: false,\r\n  expose: [\"focus\"],\r\n  setup(props, { attrs, slots, emit, expose }) {\r\n    const autofocus: any = resolveDirective(\"autofocus\");\r\n\r\n    const { id, name } = props.field;\r\n\r\n    const check = (optionId: string, checked: boolean) => {\r\n      const updatedValue = [...props.modelValue];\r\n      if (checked) {\r\n        updatedValue.push(optionId);\r\n      } else {\r\n        updatedValue.splice(updatedValue.indexOf(optionId), 1);\r\n      }\r\n      emit(\"update:modelValue\", updatedValue);\r\n    };\r\n\r\n    const el = ref<HTMLInputElement | null>(null);\r\n\r\n    expose({ focus: () => el.value?.focus() });\r\n\r\n    return () =>\r\n      h(Fragment, {}, [\r\n        withDirectives(\r\n          h(\"input\", {\r\n            ...attrs,\r\n            ref: el,\r\n            value: props.field.value,\r\n            id: id,\r\n            name: name,\r\n            type: \"checkbox\",\r\n            checked: props.modelValue.indexOf(props.field.value) != -1,\r\n            \"aria-labelledby\": `${id}_label`,\r\n            \"aria-describedby\": props.field.description\r\n              ? `${id}_help`\r\n              : undefined,\r\n            \"aria-invalid\": !!props.error,\r\n            onInput: (e: Event) => {\r\n              const el = e.target as HTMLInputElement;\r\n              check(props.field.value, el.checked);\r\n            },\r\n          }),\r\n          [[autofocus, { status: props.field.autofocus }]]\r\n        ),\r\n        slots.default ? slots.default() : null,\r\n      ]);\r\n  },\r\n});\r\n","<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"FText\",\n  inheritAttrs: false,\n});\n</script>\n<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\";\n\nimport { LInputText } from \"@/components/LInput\";\nimport type { IField } from \"@/components/LForm\";\nimport FError from \"./FError.vue\";\n\nconst props = withDefaults(\n  defineProps<{\n    /**\n     * modelValue - model string\n     */\n    modelValue: string;\n    error?: string;\n    /**\n     * Schema for field.\n     */\n    field: IField;\n    required?: boolean;\n  }>(),\n  {\n    modelValue: \"\",\n  }\n);\n\nconst emit = defineEmits([\"update:modelValue\", \"on-input\"]);\n\nconst model = computed({\n  get: () => props.modelValue,\n  set: (val: string) => {\n    emit(\"update:modelValue\", val);\n  },\n});\n\nconst inputElement = ref<InstanceType<typeof LInputText> | null>(null);\n\nconst onSetFocus = () => {\n  const el = inputElement.value?.$el;\n  if (el) el.focus();\n};\n\nconst onReset = () => {\n  model.value = \"\";\n  emit(\"on-input\");\n  onSetFocus();\n};\n</script>\n\n<template>\n  <slot\n    name=\"label\"\n    :id=\"field.id\"\n    :required=\"required\"\n    :onSetFocus=\"onSetFocus\"\n  ></slot>\n  <div\n    class=\"flex items-center\"\n    :class=\"[\n      'rounded-md border text-base transition w-full appearance-none outline-none focus-within:ring-1 hover:ring-1 bg-white dark:bg-s-900',\n      {\n        'border-d-500 dark:border-d-500 focus-within:ring-d-500 focus-within:border-d-500 hover:ring-d-500':\n          error,\n      },\n      {\n        'border-s-200 dark:border-s-600 focus-within:ring-p-500 focus-within:border-p-500 hover:ring-p-500 hover:border-p-500':\n          !error,\n      },\n    ]\"\n  >\n    <slot name=\"before\" :onReset=\"onReset\"></slot>\n    <LInputText\n      v-bind=\"$attrs\"\n      ref=\"inputElement\"\n      v-model=\"model\"\n      :field=\"field\"\n      :error=\"error\"\n      class=\"flex-auto outline-none px-4 py-2 bg-transparent placeholder-s-500 dark:placeholder-s-400\"\n      @input=\"$emit('on-input')\"\n    />\n    <slot name=\"after\" :onReset=\"onReset\"></slot>\n  </div>\n  <slot name=\"error\">\n    <FError :error=\"error\" />\n  </slot>\n  <slot name=\"description\"></slot>\n</template>\n"],"names":["LInputText","defineComponent","props","emit","autofocus","resolveDirective","id","withDirectives","h","e","el","LInputNumber","watchEffect","LInputTextarea","expose","ref","onResize","__name","css","borderTopWidth","borderBottomWidth","watch","nextTick","onMounted","_a","LInputCheckbox","attrs","slots","Fragment","LInputCheckboxGroup","name","check","optionId","checked","updatedValue","__default__","model","computed","val","inputElement","onSetFocus","onReset"],"mappings":"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"}