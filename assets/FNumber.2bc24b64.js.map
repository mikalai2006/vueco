{"version":3,"file":"FNumber.2bc24b64.js","sources":["../../src/components/ui/FTextarea.vue","../../src/components/ui/FNumber.vue"],"sourcesContent":["<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  name: \"FTextarea\",\n  inheritAttrs: false,\n});\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\";\nimport { LInputTextarea } from \"@/components/LInput\";\nimport type { IField } from \"@/components/LForm\";\nimport FError from \"./FError.vue\";\n\nconst props = withDefaults(\n  defineProps<{\n    /**\n     * modelValue - model string\n     */\n    modelValue: string;\n    error?: string;\n    /**\n     * Schema for field.\n     */\n    field: IField;\n    required?: boolean;\n  }>(),\n  {\n    modelValue: \"\",\n  }\n);\n\nconst emit = defineEmits([\"update:modelValue\", \"on-input\"]);\n\nconst model = computed({\n  get: () => props.modelValue,\n  set: (val: string) => {\n    emit(\"update:modelValue\", val);\n  },\n});\n\nconst inputElement = ref<InstanceType<typeof LInputTextarea> | null>(null);\n\nconst onSetFocus = () => {\n  const el = inputElement.value?.$el;\n\n  if (el && el?.input) el?.input.focus();\n};\n\nconst empty = computed(() => model.value == \"\");\n\nconst onReset = () => {\n  model.value = \"\";\n  emit(\"on-input\");\n  onSetFocus();\n};\n</script>\n\n<template>\n  <slot\n    name=\"label\"\n    :id=\"field.id\"\n    :required=\"required\"\n    :onSetFocus=\"onSetFocus\"\n  ></slot>\n  <div\n    class=\"flex items-center\"\n    :class=\"[\n      'rounded-md border text-base transition w-full appearance-none outline-none focus-within:ring-1 hover:ring-1 bg-white dark:bg-s-900',\n      {\n        'border-d-500 dark:border-d-500 focus-within:ring-d-500 focus-within:border-d-500 hover:ring-d-500':\n          error,\n      },\n      {\n        'border-s-200 dark:border-s-600 focus-within:ring-p-500 focus-within:border-p-500 hover:ring-p-500 hover:border-p-500':\n          !error,\n      },\n    ]\"\n  >\n    <slot name=\"before\" :onReset=\"onReset\"></slot>\n    <LInputTextarea\n      v-bind=\"$attrs\"\n      ref=\"inputElement\"\n      v-model=\"model\"\n      :field=\"field\"\n      :error=\"error\"\n      class=\"w-full flex-auto outline-none px-4 py-2 bg-transparent\"\n      @input=\"emit('on-input')\"\n    />\n    <slot name=\"after\" :onReset=\"onReset\" :empty=\"empty\"></slot>\n  </div>\n  <slot v-if=\"error\" name=\"error\">\n    <FError :error=\"error\" />\n  </slot>\n  <slot name=\"description\"></slot>\n</template>\n","<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"FNumber\",\n  inheritAttrs: false,\n});\n</script>\n<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\";\n\nimport { LInputNumber } from \"@/components/LInput\";\nimport type { IField } from \"@/components/LForm\";\nimport FError from \"./FError.vue\";\n\nconst props = withDefaults(\n  defineProps<{\n    /**\n     * modelValue - model number\n     */\n    modelValue: number;\n    error?: string;\n    /**\n     * Schema for field.\n     */\n    field: IField;\n    required?: boolean;\n  }>(),\n  {\n    modelValue: 0,\n  }\n);\n\nconst emit = defineEmits([\"update:modelValue\", \"on-input\"]);\n\nconst model = computed({\n  get: () => props.modelValue,\n  set: (val: number) => {\n    emit(\"update:modelValue\", +val);\n  },\n});\n\nconst inputElement = ref<InstanceType<typeof LInputNumber> | null>(null);\n\nconst onSetFocus = () => {\n  const el = inputElement.value?.$el;\n  if (el) el.focus();\n};\n\nconst empty = computed(() => !model.value);\n\nconst onReset = () => {\n  model.value = 0;\n  emit(\"on-input\");\n  onSetFocus();\n};\n</script>\n\n<template>\n  <slot\n    name=\"label\"\n    :id=\"field.id\"\n    :required=\"required\"\n    :onSetFocus=\"onSetFocus\"\n  ></slot>\n  <div\n    class=\"flex items-center\"\n    :class=\"[\n      'rounded-md border text-base transition w-full appearance-none outline-none focus-within:ring-1 hover:ring-1 bg-white dark:bg-s-900',\n      {\n        'border-d-500 dark:border-d-500 focus-within:ring-d-500 focus-within:border-d-500 hover:ring-d-500':\n          error,\n      },\n      {\n        'border-s-200 dark:border-s-600 focus-within:ring-p-500 focus-within:border-p-500 hover:ring-p-500 hover:border-p-500':\n          !error,\n      },\n    ]\"\n  >\n    <slot name=\"before\" :onReset=\"onReset\"></slot>\n    <LInputNumber\n      v-bind=\"$attrs\"\n      ref=\"inputElement\"\n      v-model=\"model\"\n      :field=\"field\"\n      :error=\"error\"\n      class=\"outline-none px-4 py-2 bg-transparent w-full placeholder-s-400\"\n      @input=\"$emit('on-input')\"\n    />\n    <slot name=\"after\" :onReset=\"onReset\" :empty=\"empty\"></slot>\n  </div>\n  <slot v-if=\"error\" name=\"error\">\n    <FError :error=\"error\" />\n  </slot>\n  <slot name=\"description\"></slot>\n</template>\n"],"names":["__default__","defineComponent","model","computed","props","val","emit","inputElement","ref","onSetFocus","__name","el","_a","empty","onReset"],"mappings":"6QAGA,MAAAA,EAAeC,EAAgB,CAC7B,KAAM,YACN,aAAc,EAChB,CAAC,6JA6BKC,EAAQC,EAAS,CACrB,IAAK,IAAMC,EAAM,WACjB,IAAMC,GAAgB,CACpBC,EAAK,oBAAqBD,CAAG,CAC/B,CAAA,CACD,EAEKE,EAAeC,EAAgD,IAAI,EAEnEC,EAAaC,EAAA,IAAM,OACjB,MAAAC,GAAKC,EAAAL,EAAa,QAAb,YAAAK,EAAoB,IAE3BD,IAAMA,GAAA,YAAAA,EAAI,SAAOA,GAAA,MAAAA,EAAI,MAAM,QAAM,EAHpB,cAMbE,EAAQV,EAAS,IAAMD,EAAM,OAAS,EAAE,EAExCY,EAAUJ,EAAA,IAAM,CACpBR,EAAM,MAAQ,GACdI,EAAK,UAAU,EACJG,GAAA,EAHG,gyDClDhB,MAAAT,EAAeC,EAAgB,CAC7B,KAAM,UACN,aAAc,EAChB,CAAC,4JA6BKC,EAAQC,EAAS,CACrB,IAAK,IAAMC,EAAM,WACjB,IAAMC,GAAgB,CACfC,EAAA,oBAAqB,CAACD,CAAG,CAChC,CAAA,CACD,EAEKE,EAAeC,EAA8C,IAAI,EAEjEC,EAAaC,EAAA,IAAM,OACjB,MAAAC,GAAKC,EAAAL,EAAa,QAAb,YAAAK,EAAoB,IAC3BD,GAAIA,EAAG,MAAM,CAAA,EAFA,cAKbE,EAAQV,EAAS,IAAM,CAACD,EAAM,KAAK,EAEnCY,EAAUJ,EAAA,IAAM,CACpBR,EAAM,MAAQ,EACdI,EAAK,UAAU,EACJG,GAAA,EAHG"}