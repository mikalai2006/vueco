var r=Object.defineProperty;var i=(t,e)=>r(t,"name",{value:e,configurable:!0});const p=i(function(t){const{preCircle:e}=t;e&&e.remove()},"removeEl"),d=i(t=>{const e=t.currentTarget,o=t.currentTarget.ripple_options,s=document.createElement("div");s.className+="overflow-hidden absolute inset-0 b-rounded";const l=document.createElement("span"),n=Math.max(e.clientWidth,e.clientHeight),a=n/2;l.style.width=l.style.height=`${n}px`;const c=e.getBoundingClientRect();l.style.left=`${t.clientX-c.left-a}px`,l.style.top=`${t.clientY-c.top-a}px`,l.classList.add("ripple"),o.class?l.className+=` ${o.class}`:l.className+=" bg-black/20 dark:bg-white/20",l.style.animation=`ripple ${o.duration||600}ms ${o.timingf||"linear"}`,s.appendChild(l),e.prepend(s),setTimeout(p.bind(null,{preCircle:s,options:o}),o.duration||600)},"createRipple"),m={mounted:(t,e)=>{if(e.value){const o=e.value;t.addEventListener("click",d),t.ripple_options=o}else console.log("Not found value for ripple",t,e.value)},updated(t,e){const o=e;o.oldValue!==o.value&&(t.ripple_options={...o.value})}};export{m as r};
//# sourceMappingURL=ripple.41117a53.js.map
