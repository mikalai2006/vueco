{"version":3,"file":"preview.b9b2d344.js","sources":["../../src/directives/ripple.ts","../../src/directives/autofocus.ts","../../.storybook/preview.js"],"sourcesContent":["const removeEl = function (params: any) {\r\n  const { circle } = params;\r\n  if (circle) {\r\n    circle.remove();\r\n  }\r\n};\r\n\r\nconst createRipple = (event: any) => {\r\n  const button = event.currentTarget;\r\n  const options = event.currentTarget.ripple_options;\r\n  const circle = document.createElement(\"span\");\r\n  const diameter = Math.max(button.clientWidth, button.clientHeight);\r\n  const radius = diameter / 2;\r\n\r\n  circle.style.width = circle.style.height = `${diameter}px`;\r\n  const target = button.getBoundingClientRect();\r\n  circle.style.left = `${event.clientX - target.left - radius}px`; // - (button.offsetLeft + radius)}px`;\r\n  circle.style.top = `${event.clientY - target.top - radius}px`; //  - (button.offsetTop + radius)}px`;\r\n  circle.classList.add(\"ripple\");\r\n  if (options.class) {\r\n    circle.className += ` ${options.class}`;\r\n  } else {\r\n    circle.className += \" bg-black/20 dark:bg-white/20\";\r\n  }\r\n  circle.style.animation = `ripple ${options.duration || 600}ms ${\r\n    options.timingf || \"linear\"\r\n  }`;\r\n\r\n  button.appendChild(circle);\r\n\r\n  setTimeout(removeEl.bind(null, { circle, options }), options.duration || 600);\r\n};\r\n\r\nexport const ripple = {\r\n  mounted: (el: any, binding: any): any => {\r\n    if (binding.value) {\r\n      const options = binding.value;\r\n      el.addEventListener(\"click\", createRipple);\r\n      el.ripple_options = options;\r\n    } else {\r\n      console.log(\"Not found value for ripple\", el, binding.value);\r\n    }\r\n  },\r\n  updated(el: any, binding: any) {\r\n    const options = binding;\r\n    if (options.oldValue !== options.value) {\r\n      // el.removeEventListener('click', createRipple)\r\n      el.ripple_options = { ...options.value };\r\n      // el.addEventListener('click', createRipple)\r\n    }\r\n  },\r\n};\r\n","export const autofocus = {\r\n  mounted: (el: any, binding): any => {\r\n    const { status } = binding.value;\r\n    if (el && status) {\r\n      el.focus();\r\n    }\r\n  },\r\n};\r\n","import { app } from \"@storybook/vue3\";\r\n\r\nimport \"../src/assets/css/tailwindcss.scss\";\r\n\r\nimport { ripple } from \"../src/directives/ripple\";\r\napp.directive(\"ripple\", ripple);\r\nimport { autofocus } from \"../src/directives/autofocus\";\r\napp.directive(\"autofocus\", autofocus);\r\n\r\nexport const parameters = {\r\n  actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n  controls: {\r\n    matchers: {\r\n      color: /(background|color)$/i,\r\n      date: /Date$/,\r\n    },\r\n  },\r\n};\r\nexport const globalTypes = {\r\n  theme: {\r\n    name: \"Theme\",\r\n    description: \"Theme tailwindcss\",\r\n    defaultValue: \"light\",\r\n    toolbar: {\r\n      icon: \"paintbrush\",\r\n      items: [\"light\", \"dark\"],\r\n      dynamicTitle: true,\r\n    },\r\n  },\r\n};\r\n\r\n// export const withTheme = (StoryFn, context) => {\r\n//   // Get values from story parameter first, else fallback to globals\r\n//   const theme = context.parameters.theme || context.globals.theme;\r\n//   const storyTheme = theme === \"dark\" ? darkTheme : lightTheme;\r\n//   return (\r\n//     <div class={storyTheme}>\r\n//       <story />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export const decorators = [withTheme];\r\nexport const decorators = [\r\n  (story, context) => {\r\n    const theme = context.globals.theme;\r\n    return {\r\n      data: () => {\r\n        return {\r\n          theme,\r\n        };\r\n      },\r\n      components: { story },\r\n      template:\r\n        '<div :class=\"[theme]\"><div class=\"app\"><div class=\"bg-white dark:bg-s-900 min-h-screen w-full\"><story /></div></div></div>',\r\n    };\r\n  },\r\n];\r\n"],"names":["removeEl","__name","params","circle","createRipple","event","button","options","diameter","radius","target","ripple","el","binding","autofocus","status","app","parameters","globalTypes","decorators","story","context","theme"],"mappings":"uQAAA,MAAMA,EAAWC,EAAA,SAAUC,EAAa,CAChC,KAAA,CAAE,OAAAC,CAAW,EAAAD,EACfC,GACFA,EAAO,OAAO,CAElB,EALiB,YAOXC,EAAeH,EAACI,GAAe,CACnC,MAAMC,EAASD,EAAM,cACfE,EAAUF,EAAM,cAAc,eAC9BF,EAAS,SAAS,cAAc,MAAM,EACtCK,EAAW,KAAK,IAAIF,EAAO,YAAaA,EAAO,YAAY,EAC3DG,EAASD,EAAW,EAE1BL,EAAO,MAAM,MAAQA,EAAO,MAAM,OAAS,GAAGK,MACxC,MAAAE,EAASJ,EAAO,wBACtBH,EAAO,MAAM,KAAO,GAAGE,EAAM,QAAUK,EAAO,KAAOD,MACrDN,EAAO,MAAM,IAAM,GAAGE,EAAM,QAAUK,EAAO,IAAMD,MAC5CN,EAAA,UAAU,IAAI,QAAQ,EACzBI,EAAQ,MACHJ,EAAA,WAAa,IAAII,EAAQ,QAEhCJ,EAAO,WAAa,gCAEtBA,EAAO,MAAM,UAAY,UAAUI,EAAQ,UAAY,SACrDA,EAAQ,SAAW,WAGrBD,EAAO,YAAYH,CAAM,EAEd,WAAAH,EAAS,KAAK,KAAM,CAAE,OAAAG,EAAQ,QAAAI,EAAS,EAAGA,EAAQ,UAAY,GAAG,CAC9E,EAxBqB,gBA0BRI,EAAS,CACpB,QAAS,CAACC,EAASC,IAAsB,CACvC,GAAIA,EAAQ,MAAO,CACjB,MAAMN,EAAUM,EAAQ,MACrBD,EAAA,iBAAiB,QAASR,CAAY,EACzCQ,EAAG,eAAiBL,CAAA,MAEpB,QAAQ,IAAI,6BAA8BK,EAAIC,EAAQ,KAAK,CAE/D,EACA,QAAQD,EAASC,EAAc,CAC7B,MAAMN,EAAUM,EACZN,EAAQ,WAAaA,EAAQ,QAE/BK,EAAG,eAAiB,CAAE,GAAGL,EAAQ,KAAM,EAG3C,CACF,ECnDaO,EAAY,CACvB,QAAS,CAACF,EAASC,IAAiB,CAC5B,KAAA,CAAE,OAAAE,CAAO,EAAIF,EAAQ,MACvBD,GAAMG,GACRH,EAAG,MAAM,CAEb,CACF,ECFAI,EAAI,UAAU,SAAUL,CAAM,EAE9BK,EAAI,UAAU,YAAaF,CAAS,EAExB,MAACG,EAAa,CACxB,QAAS,CAAE,cAAe,YAAc,EACxC,SAAU,CACR,SAAU,CACR,MAAO,uBACP,KAAM,OACP,CACF,CACH,EACaC,EAAc,CACzB,MAAO,CACL,KAAM,QACN,YAAa,oBACb,aAAc,QACd,QAAS,CACP,KAAM,aACN,MAAO,CAAC,QAAS,MAAM,EACvB,aAAc,EACf,CACF,CACH,EAcaC,EAAa,CACxB,CAACC,EAAOC,IAAY,CAClB,MAAMC,EAAQD,EAAQ,QAAQ,MAC9B,MAAO,CACL,KAAM,KACG,CACL,MAAAC,CACV,GAEM,WAAY,CAAE,MAAAF,CAAO,EACrB,SACE,4HACR,CACG,CACH"}