{"version":3,"file":"FText.b1066ef0.js","sources":["../../src/components/LInput/LInput.ts","../../src/components/ui/FText.vue"],"sourcesContent":["import {\n  h,\n  defineComponent,\n  resolveDirective,\n  withDirectives,\n  ref,\n  watchEffect,\n  watch,\n  nextTick,\n  onMounted,\n  Fragment,\n} from \"vue\";\n\nimport type { PropType } from \"vue\";\n\nimport type { IField } from \"@/components/LForm/LForm\";\n\nexport const LInputText = defineComponent({\n  name: \"LInputText\",\n  props: {\n    modelValue: {\n      type: [String, Number],\n      required: true,\n      default: \"\",\n    },\n    field: {\n      type: Object as PropType<IField>,\n      required: true,\n      default: () => {\n        return {};\n      },\n    },\n    error: {\n      type: String,\n      default: \"\",\n    },\n  },\n  setup(props, { emit }) {\n    const autofocus: any = resolveDirective(\"autofocus\");\n\n    const id = props.field.id || props.field.name;\n\n    return () =>\n      withDirectives(\n        h(\"input\", {\n          value: props.modelValue,\n          id,\n          name: id,\n          type: \"text\",\n          placeholder: props.field.placeholder,\n          // autocomplete: \"off\",\n          \"aria-labelledby\": `${props.field.name}_label`,\n          \"aria-describedby\": props.field.description\n            ? `${id}_help`\n            : undefined,\n          \"aria-invalid\": !!props.error,\n          onInput: (e: Event) => {\n            const el = e.target as HTMLInputElement;\n            emit(\"update:modelValue\", el.value);\n          },\n        }),\n        [[autofocus, { status: props.field.autofocus }]]\n      );\n  },\n});\n\nexport const LInputNumber = defineComponent({\n  name: \"LInputNumber\",\n  props: {\n    modelValue: {\n      type: [Number, String],\n      required: true,\n      default: 0,\n    },\n    field: {\n      type: Object as PropType<IField>,\n      required: true,\n      default: () => {\n        return {};\n      },\n    },\n    error: {\n      type: String,\n      default: \"\",\n    },\n    max: {\n      type: Number,\n      default: 100,\n    },\n    min: {\n      type: Number,\n      default: 0,\n    },\n  },\n  setup(props, { emit }) {\n    const autofocus: any = resolveDirective(\"autofocus\");\n\n    const id = props.field.id || props.field.name;\n\n    watchEffect(\n      () => {\n        // model.value = +props.modelValue\n        emit(\"update:modelValue\", +props.modelValue);\n        if (props.modelValue > props.max) {\n          emit(\"update:modelValue\", props.max);\n        }\n        if (props.modelValue < props.min) {\n          emit(\"update:modelValue\", props.min);\n        }\n      },\n      {\n        flush: \"post\",\n      }\n    );\n\n    return () =>\n      withDirectives(\n        h(\"input\", {\n          value: props.modelValue,\n          id,\n          name: id,\n          type: \"number\",\n          min: props.min,\n          max: props.max,\n          placeholder: props.field.placeholder,\n          \"aria-labelledby\": `${id}_label`,\n          \"aria-describedby\": props.field.description\n            ? `${id}_help`\n            : undefined,\n          \"aria-invalid\": !!props.error,\n          onInput: (e: Event) => {\n            const el = e.target as HTMLInputElement;\n            emit(\"update:modelValue\", el.value);\n          },\n        }),\n        [[autofocus, { status: props.field.autofocus }]]\n      );\n  },\n});\n\nexport const LInputTextarea = defineComponent({\n  name: \"LInputTextarea\",\n  props: {\n    modelValue: {\n      type: String,\n      required: true,\n      default: \"\",\n    },\n    field: {\n      type: Object as PropType<IField>,\n      required: true,\n    },\n    error: {\n      type: String,\n      default: \"\",\n    },\n  },\n  setup(props, { emit, expose }) {\n    const autofocus: any = resolveDirective(\"autofocus\");\n\n    const id = props.field.id || props.field.name;\n\n    const el = ref<HTMLInputElement | null>(null);\n    const onResize = () => {\n      if (el.value) {\n        const css = window.getComputedStyle(el.value, null);\n        const { borderTopWidth, borderBottomWidth } = css;\n        el.value.style.height = \"auto\";\n        el.value.style.height =\n          el.value.scrollHeight +\n          parseInt(borderTopWidth) +\n          parseInt(borderBottomWidth) +\n          \"px\";\n      }\n    };\n    watch(\n      () => props.modelValue,\n      () => {\n        nextTick(() => onResize());\n      }\n    );\n    onMounted(() => {\n      nextTick(() => {\n        onResize();\n      });\n    });\n\n    expose({ focus: () => el.value?.focus() });\n    return () =>\n      withDirectives(\n        h(\"textarea\", {\n          ref: el,\n          value: props.modelValue,\n          id,\n          name: id,\n          autocomplete: \"off\",\n          placeholder: props.field.placeholder,\n          \"aria-labelledby\": `${id}_label`,\n          \"aria-describedby\": props.field.description\n            ? `${id}_help`\n            : undefined,\n          \"aria-invalid\": !!props.error,\n          onInput: (e: Event) => {\n            const el = e.target as HTMLInputElement;\n            emit(\"update:modelValue\", el.value);\n          },\n        }),\n        [[autofocus, { status: props.field.autofocus }]]\n      );\n  },\n});\n\nexport const LInputCheckbox = defineComponent({\n  name: \"LInputCheckbox\",\n  props: {\n    modelValue: {\n      type: Boolean,\n      required: true,\n      default: false,\n    },\n    field: {\n      type: Object as PropType<IField>,\n      required: true,\n    },\n    error: {\n      type: String,\n      default: \"\",\n    },\n  },\n  inheritAttrs: false,\n  expose: [\"focus\"],\n  setup(props, { attrs, slots, emit, expose }) {\n    const autofocus: any = resolveDirective(\"autofocus\");\n\n    const id = props.field.id || props.field.name;\n\n    const el = ref<HTMLInputElement | null>(null);\n\n    expose({ focus: () => el.value?.focus() });\n\n    return () =>\n      h(Fragment, {}, [\n        withDirectives(\n          h(\"input\", {\n            ...attrs,\n            ref: el,\n            value: props.modelValue,\n            id,\n            name: id,\n            type: \"checkbox\",\n            \"aria-labelledby\": `${id}_label`,\n            \"aria-describedby\": props.field.description\n              ? `${id}_help`\n              : undefined,\n            \"aria-invalid\": !!props.error,\n            onInput: (e: Event) => {\n              const el = e.target as HTMLInputElement;\n              emit(\"update:modelValue\", el.checked);\n            },\n          }),\n          [[autofocus, { status: props.field.autofocus }]]\n        ),\n        slots.default ? slots.default() : null,\n      ]);\n  },\n});\n\nexport const LInputCheckboxGroup = defineComponent({\n  name: \"LInputCheckboxGroup\",\n  props: {\n    modelValue: {\n      type: Array,\n      required: true,\n      default: () => [],\n    },\n    field: {\n      type: Object as PropType<IField>,\n      required: true,\n    },\n    error: {\n      type: String,\n      default: \"\",\n    },\n  },\n  inheritAttrs: false,\n  expose: [\"focus\"],\n  setup(props, { attrs, slots, emit, expose }) {\n    const autofocus: any = resolveDirective(\"autofocus\");\n\n    const { id, name } = props.field;\n\n    const check = (optionId: string, checked: boolean) => {\n      const updatedValue = [...props.modelValue];\n      if (checked) {\n        updatedValue.push(optionId);\n      } else {\n        updatedValue.splice(updatedValue.indexOf(optionId), 1);\n      }\n      emit(\"update:modelValue\", updatedValue);\n    };\n\n    const el = ref<HTMLInputElement | null>(null);\n\n    expose({ focus: () => el.value?.focus() });\n\n    return () =>\n      h(Fragment, {}, [\n        withDirectives(\n          h(\"input\", {\n            ...attrs,\n            ref: el,\n            value: props.field.value,\n            id: id,\n            name: name,\n            type: \"checkbox\",\n            checked: props.modelValue.indexOf(props.field.value) != -1,\n            \"aria-labelledby\": `${id}_label`,\n            \"aria-describedby\": props.field.description\n              ? `${id}_help`\n              : undefined,\n            \"aria-invalid\": !!props.error,\n            onInput: (e: Event) => {\n              const el = e.target as HTMLInputElement;\n              check(props.field.value, el.checked);\n            },\n          }),\n          [[autofocus, { status: props.field.autofocus }]]\n        ),\n        slots.default ? slots.default() : null,\n      ]);\n  },\n});\n","<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"FText\",\n  inheritAttrs: false,\n});\n</script>\n<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\";\n\nimport { LInputText } from \"@/components/LInput\";\nimport type { IField } from \"@/components/LForm\";\nimport FError from \"./FError.vue\";\n\nconst props = withDefaults(\n  defineProps<{\n    /**\n     * modelValue - model string\n     */\n    modelValue: string;\n    error?: string;\n    /**\n     * Schema for field.\n     */\n    field: IField;\n    required?: boolean;\n  }>(),\n  {\n    modelValue: \"\",\n  }\n);\n\nconst emit = defineEmits([\"update:modelValue\", \"on-input\"]);\n\nconst model = computed({\n  get: () => props.modelValue,\n  set: (val: string) => {\n    emit(\"update:modelValue\", val);\n  },\n});\n\nconst inputElement = ref<InstanceType<typeof LInputText> | null>(null);\n\nconst onSetFocus = () => {\n  const el = inputElement.value?.$el;\n  if (el) el.focus();\n};\n\nconst onReset = () => {\n  model.value = \"\";\n  emit(\"on-input\");\n  onSetFocus();\n};\n</script>\n\n<template>\n  <slot\n    name=\"label\"\n    :id=\"field.id\"\n    :required=\"required\"\n    :onSetFocus=\"onSetFocus\"\n  ></slot>\n  <div\n    class=\"flex items-center\"\n    :class=\"[\n      'rounded-md border text-base transition w-full appearance-none outline-none focus-within:ring-1 hover:ring-1 bg-white dark:bg-s-900',\n      {\n        'border-d-500 dark:border-d-500 focus-within:ring-d-500 focus-within:border-d-500 hover:ring-d-500':\n          error,\n      },\n      {\n        'border-s-200 dark:border-s-600 focus-within:ring-p-500 focus-within:border-p-500 hover:ring-p-500 hover:border-p-500':\n          !error,\n      },\n    ]\"\n  >\n    <slot name=\"before\" :onReset=\"onReset\"></slot>\n    <LInputText\n      v-bind=\"$attrs\"\n      ref=\"inputElement\"\n      v-model=\"model\"\n      :field=\"field\"\n      :error=\"error\"\n      class=\"flex-auto outline-none px-4 py-2 bg-transparent placeholder-s-500 dark:placeholder-s-400\"\n      @input=\"$emit('on-input')\"\n    />\n    <slot name=\"after\" :onReset=\"onReset\"></slot>\n  </div>\n  <slot name=\"error\">\n    <FError :error=\"error\" />\n  </slot>\n  <slot name=\"description\"></slot>\n</template>\n"],"names":["LInputText","defineComponent","props","emit","autofocus","resolveDirective","id","withDirectives","h","e","el","LInputNumber","watchEffect","LInputTextarea","expose","ref","onResize","__name","css","borderTopWidth","borderBottomWidth","watch","nextTick","onMounted","_a","LInputCheckbox","attrs","slots","Fragment","LInputCheckboxGroup","name","check","optionId","checked","updatedValue","__default__","model","computed","val","inputElement","onSetFocus","onReset"],"mappings":"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"}