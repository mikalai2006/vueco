{"version":3,"file":"preview.ef15c35f.js","sources":["../../src/directives/autofocus.ts","../../.storybook/preview.js"],"sourcesContent":["export const autofocus = {\n  mounted: (el: any, binding): any => {\n    const { status } = binding.value;\n    if (el && status) {\n      el.focus();\n    }\n  },\n};\n","import { app } from \"@storybook/vue3\";\r\n\r\nimport \"../src/assets/css/tailwindcss.scss\";\r\n\r\n// import { ripple } from \"../src/directives/ripple\";\r\n// app.directive(\"ripple\", ripple);\r\nimport { autofocus } from \"../src/directives/autofocus\";\r\napp.directive(\"autofocus\", autofocus);\r\nimport { tooltip } from \"../src/directives/tooltip\";\r\napp.directive(\"tooltip\", tooltip);\r\n// import { LBtn } from \"../src/components/LBtn\";\r\n// app.component(\"LBtn\", LBtn);\r\n\r\nexport const parameters = {\r\n  actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n  controls: {\r\n    matchers: {\r\n      color: /(background|color)$/i,\r\n      date: /Date$/,\r\n    },\r\n  },\r\n  backgrounds: {\r\n    disable: true,\r\n    // default: \"light\",\r\n    // values: [\r\n    //   {\r\n    //     name: \"light\",\r\n    //     value: \"#FAFAFA\",\r\n    //   },\r\n    //   {\r\n    //     name: \"dark\",\r\n    //     value: \"#18181B\",\r\n    //   },\r\n    // ],\r\n  },\r\n};\r\nexport const globalTypes = {\r\n  theme: {\r\n    name: \"Theme\",\r\n    description: \"Theme tailwindcss\",\r\n    defaultValue: \"light\",\r\n    toolbar: {\r\n      icon: \"paintbrush\",\r\n      items: [\"light\", \"dark\"],\r\n      dynamicTitle: true,\r\n    },\r\n  },\r\n};\r\n\r\n// export const withTheme = (StoryFn, context) => {\r\n//   // Get values from story parameter first, else fallback to globals\r\n//   const theme = context.parameters.theme || context.globals.theme;\r\n//   const storyTheme = theme === \"dark\" ? darkTheme : lightTheme;\r\n//   return (\r\n//     <div class={storyTheme}>\r\n//       <story />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export const decorators = [withTheme];\r\nexport const decorators = [\r\n  (story, context) => {\r\n    const theme = context.globals.theme;\r\n    return {\r\n      data: () => {\r\n        const [body, _] = document.getElementsByTagName(\"body\");\r\n        if (body) {\r\n          body.classList.remove(\"dark\");\r\n          body.classList.remove(\"light\");\r\n          body.classList.add(theme);\r\n        }\r\n\r\n        return {\r\n          theme,\r\n        };\r\n      },\r\n      components: { story },\r\n      template:\r\n        '<div :class=\"[theme]\"><div class=\"app\"><div class=\" w-full p-6\"><story /></div></div></div>',\r\n    };\r\n  },\r\n];\r\n"],"names":["autofocus","el","binding","status","app","tooltip","parameters","globalTypes","decorators","story","context","theme","body","_"],"mappings":"6NAAO,MAAMA,EAAY,CACvB,QAAS,CAACC,EAASC,IAAiB,CAC5B,KAAA,CAAE,OAAAC,CAAO,EAAID,EAAQ,MACvBD,GAAME,GACRF,EAAG,MAAM,CAEb,CACF,ECAAG,EAAI,UAAU,YAAaJ,CAAS,EAEpCI,EAAI,UAAU,UAAWC,CAAO,EAIpB,MAACC,EAAa,CACxB,QAAS,CAAE,cAAe,YAAc,EACxC,SAAU,CACR,SAAU,CACR,MAAO,uBACP,KAAM,OACP,CACF,EACD,YAAa,CACX,QAAS,EAYV,CACH,EACaC,EAAc,CACzB,MAAO,CACL,KAAM,QACN,YAAa,oBACb,aAAc,QACd,QAAS,CACP,KAAM,aACN,MAAO,CAAC,QAAS,MAAM,EACvB,aAAc,EACf,CACF,CACH,EAcaC,EAAa,CACxB,CAACC,EAAOC,IAAY,CAClB,MAAMC,EAAQD,EAAQ,QAAQ,MAC9B,MAAO,CACL,KAAM,IAAM,CACV,KAAM,CAACE,EAAMC,CAAC,EAAI,SAAS,qBAAqB,MAAM,EACtD,OAAID,IACFA,EAAK,UAAU,OAAO,MAAM,EAC5BA,EAAK,UAAU,OAAO,OAAO,EAC7BA,EAAK,UAAU,IAAID,CAAK,GAGnB,CACL,MAAAA,CACV,CACO,EACD,WAAY,CAAE,MAAAF,CAAO,EACrB,SACE,6FACR,CACG,CACH"}