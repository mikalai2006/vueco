{"version":3,"file":"FButton.7dbe626b.js","sources":["../../src/components/ui/FButton.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { computed, ref, type PropType } from \"vue\";\nimport { LBtn, TypeBtnTag, TypeBtnMode } from \"@/components/LBtn\";\nimport { ripple } from \"@/directives/ripple\";\n\nconst vRipple = ripple;\n\nconst props = defineProps({\n  as: {\n    type: String as PropType<TypeBtnTag>,\n    default: \"button\",\n    validator(val: TypeBtnTag) {\n      return [...Object.values(TypeBtnTag)].includes(val);\n    },\n  },\n  mode: {\n    type: String as PropType<TypeBtnMode>,\n    default: TypeBtnMode.second,\n    validator(val: TypeBtnMode) {\n      return [...Object.values(TypeBtnMode)].includes(val);\n    },\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  pressed: {\n    type: Boolean,\n    default: false,\n  },\n  fill: {\n    type: Boolean,\n    default: false,\n  },\n});\ndefineEmits([\"update:pressed\"]);\n\nconst cssClass = computed(() => {\n  let _class =\n    \"relative py-2 px-4 font-medium b-rounded outline-none cursor-pointer transition focus:ring-2 focus:ring-offset-2 focus:ring-offset-white dark:focus:ring-offset-s-900\";\n  switch (props.mode as keyof typeof TypeBtnMode) {\n    case TypeBtnMode.primary:\n      _class +=\n        \" ring-p-500\" +\n        (props.fill\n          ? \" bg-p-500 dark:bg-p-700 text-white hover:bg-p-400 hover:bg-p-600 dark:hover:bg-p-600\"\n          : \" bg-p-500/10 text-p-700 dark:text-p-400 hover:bg-p-500/30\");\n      break;\n    case TypeBtnMode.second:\n      _class +=\n        \" ring-s-500\" +\n        (props.fill\n          ? \" bg-s-500 dark:bg-s-700 text-white hover:bg-s-600 dark:hover:bg-s-600\"\n          : \" bg-s-500/10 text-s-700 dark:text-s-400 hover:bg-s-500/30\");\n      break;\n    case TypeBtnMode.danger:\n      _class +=\n        \" ring-d-500\" +\n        (props.fill\n          ? \" bg-d-600 dark:bg-d-700 text-white hover:bg-d-700 dark:hover:bg-d-600\"\n          : \" bg-d-600/10 text-d-700 dark:text-d-400 hover:bg-d-500/30\");\n      break;\n    case TypeBtnMode.link:\n      _class += \" ring-s-500/10 hover:bg-s-500/10\";\n      break;\n\n    default:\n      break;\n  }\n  if (props.pressed) {\n    _class += \" shadow-inner\";\n  }\n  return _class;\n});\n\nconst btn = ref(null);\n\ndefineExpose({ $el: btn, el: btn });\n</script>\n\n<template>\n  <LBtn\n    ref=\"btn\"\n    v-ripple=\"{ class: 'bg-black/50' }\"\n    v-bind=\"{ disabled, pressed, as }\"\n    :class=\"[\n      cssClass,\n      {\n        'cursor-not-allowed disabled:bg-transparent disabled:text-s-500 dark:disabled:bg-transparent dark:disabled:text-s-500':\n          disabled,\n      },\n    ]\"\n    @click=\"$emit('update:pressed', !pressed)\"\n  >\n    <span class=\"relative\">\n      <slot></slot>\n    </span>\n  </LBtn>\n</template>\n"],"names":["vRipple","ripple","cssClass","computed","_class","props","TypeBtnMode","btn","ref","expose"],"mappings":"4jBAKMA,EAAUC,EAgCVC,EAAWC,EAAS,IAAM,CAC9B,IAAIC,EACF,wKACF,OAAQC,EAAM,KAAkC,CAC9C,KAAKC,EAAY,QAEbF,GAAA,eACCC,EAAM,KACH,uFACA,6DACN,MACF,KAAKC,EAAY,OAEbF,GAAA,eACCC,EAAM,KACH,wEACA,6DACN,MACF,KAAKC,EAAY,OAEbF,GAAA,eACCC,EAAM,KACH,wEACA,6DACN,MACF,KAAKC,EAAY,KACLF,GAAA,mCACV,KAIJ,CACA,OAAIC,EAAM,UACED,GAAA,iBAELA,CAAA,CACR,EAEKG,EAAMC,EAAI,IAAI,EAEpB,OAAAC,EAAa,CAAE,IAAKF,EAAK,GAAIA,CAAK,CAAA"}