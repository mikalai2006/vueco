{"version":3,"file":"LTabs.stories.ee3387e5.js","sources":["../../src/composable/useDom.ts","../../src/components/LTabs/LTabs.ts","../../src/components/ui/FTabs.vue"],"sourcesContent":["import type { Ref, ComponentPublicInstance } from \"vue\";\r\n\r\nexport function dom<T extends Element | ComponentPublicInstance>(\r\n  ref?: Ref<T | null>\r\n): T | null {\r\n  if (ref == null) return null;\r\n  if (ref.value == null) return null;\r\n\r\n  return \"$el\" in ref.value ? (ref.value.$el as T | null) : ref.value;\r\n}\r\n","// btn-primary, btn-accent, btn-second, btn-danger\r\nimport {\r\n  h,\r\n  defineComponent,\r\n  ref,\r\n  inject,\r\n  computed,\r\n  provide,\r\n  onMounted,\r\n  onUnmounted,\r\n} from \"vue\";\r\nimport type { Ref, InjectionKey, WritableComputedRef } from \"vue\";\r\n\r\nimport { dom } from \"@/composable/useDom\";\r\nimport { useId } from \"@/composable/useId\";\r\n\r\nexport type StateDefinition = {\r\n  // State\r\n  selectedIndex: Ref<number | null>;\r\n  focusedIndex: Ref<number | null>;\r\n  selectedKey: Ref<string | null>;\r\n  focusedKey: Ref<string | null>;\r\n  orientation: Ref<\"vertical\" | \"horizontal\">;\r\n  activation: Ref<\"auto\" | \"manual\">;\r\n  model: WritableComputedRef<string>;\r\n\r\n  tabs: Ref<{ tab: Ref<HTMLElement | null>; tabData: string }[]>;\r\n  panels: Ref<Ref<HTMLElement | null>[]>;\r\n\r\n  // State mutators\r\n  setSelectedKey(key: string): void;\r\n  setFocusedIndex(index: string): void;\r\n  registerTab(tab: Ref<HTMLElement | null>, tabData: string): void;\r\n  unregisterTab(tab: Ref<HTMLElement | null>, tabData: string): void;\r\n  registerPanel(panel: Ref<HTMLElement | null>): void;\r\n  unregisterPanel(panel: Ref<HTMLElement | null>): void;\r\n};\r\n\r\nexport const TabsContext = Symbol(\r\n  \"TabsContext\"\r\n) as InjectionKey<StateDefinition>;\r\n\r\n// function useTabsContext(component: string) {\r\n//   const context = inject(TabsContext, null)\r\n\r\n//   if (context === null) {\r\n//     const err = new Error(\r\n//       `<${component} /> is missing a parent <TabGroup /> component.`\r\n//     )\r\n//     if (Error.captureStackTrace) Error.captureStackTrace(err, useTabsContext)\r\n//     throw err\r\n//   }\r\n\r\n//   return context\r\n// }\r\n\r\nexport const LTabs = defineComponent({\r\n  name: \"LTabs\",\r\n  props: {\r\n    as: { type: [Object, String], default: \"div\" },\r\n    selectedIndex: { type: [Number], default: 0 },\r\n    defaultIndex: { type: [Number], default: 0 },\r\n    vertical: { type: [Boolean], default: false },\r\n    manual: { type: [Boolean], default: false },\r\n    modelValue: { type: [String], default: \"\" },\r\n  },\r\n  emits: {\r\n    change: (_index: string) => _index,\r\n    \"update:modelValue\": (index: string) => index,\r\n  },\r\n  setup(props, { slots, emit }) {\r\n    const selectedIndex = ref<StateDefinition[\"selectedIndex\"][\"value\"]>(null);\r\n    const focusedIndex = ref<StateDefinition[\"focusedIndex\"][\"value\"]>(null);\r\n    const selectedKey = ref<StateDefinition[\"selectedKey\"][\"value\"]>(null);\r\n    const focusedKey = ref<StateDefinition[\"focusedKey\"][\"value\"]>(null);\r\n    const tabs = ref<StateDefinition[\"tabs\"][\"value\"]>([]);\r\n    const panels = ref<StateDefinition[\"panels\"][\"value\"]>([]);\r\n    const model = computed<StateDefinition[\"model\"][\"value\"]>({\r\n      get() {\r\n        return props.modelValue;\r\n      },\r\n      set(val) {\r\n        val && emit(\"update:modelValue\", val);\r\n      },\r\n    });\r\n\r\n    const tabApi = {\r\n      selectedIndex,\r\n      focusedIndex,\r\n      selectedKey,\r\n      focusedKey,\r\n      orientation: computed(() => (props.vertical ? \"vertical\" : \"horizontal\")),\r\n      activation: computed(() => (props.manual ? \"manual\" : \"auto\")),\r\n      tabs,\r\n      panels,\r\n      model,\r\n      setSelectedKey(key: string) {\r\n        if (selectedKey.value === key) return;\r\n        selectedKey.value = key;\r\n\r\n        const index = tabs.value.findIndex((x) => x.tabData == key);\r\n        selectedIndex.value = index;\r\n\r\n        emit(\"change\", key);\r\n        model.value = key;\r\n        emit(\"update:modelValue\", key);\r\n      },\r\n      setFocusedIndex(key: string) {\r\n        if (focusedKey.value === key) return;\r\n        focusedKey.value = key;\r\n        const index = tabs.value.findIndex((x) => x.tabData == key);\r\n        focusedIndex.value = index;\r\n      },\r\n      registerTab(tab: Ref<HTMLElement | null>, tabData: string) {\r\n        // if (!tabs.value[id]) tabs.value[id] = tab;\r\n        tabs.value.push({\r\n          tab,\r\n          tabData,\r\n        });\r\n      },\r\n      unregisterTab(tab: typeof tabs.value[number], id: string) {\r\n        const idx = tabs.value.findIndex((x) => x.tabData === id);\r\n        if (idx !== -1) tabs.value.splice(idx, 1);\r\n        // if (tabs.value[id]) delete tabs.value[id];\r\n      },\r\n      registerPanel(panel: typeof panels.value[number]) {\r\n        if (!panels.value.includes(panel)) panels.value.push(panel);\r\n      },\r\n      unregisterPanel(panel: typeof panels.value[number]) {\r\n        const idx = panels.value.indexOf(panel);\r\n        if (idx !== -1) panels.value.splice(idx, 1);\r\n      },\r\n    };\r\n\r\n    provide(TabsContext, tabApi);\r\n\r\n    return () => h(props.as, { class: \"tabs\" }, [slots.default?.({ tabApi })]);\r\n    // return () => {\r\n    //   const slot = { selectedIndex: selectedIndex.value };\r\n    //   const children = slots.default?.(slot);\r\n    //   const { as, ...incomingProps } = Object.assign(props, [\r\n    //     \"unmount\",\r\n    //     \"static\",\r\n    //   ]);\r\n\r\n    //   return h(as, { class: \"tabs\" }, children);\r\n    // };\r\n  },\r\n});\r\n\r\nexport const LTabsList = defineComponent({\r\n  name: \"LTabsList\",\r\n  props: {\r\n    as: { type: [Object, String], default: \"div\" },\r\n  },\r\n  setup(props, { slots }) {\r\n    const tabApi = inject(TabsContext);\r\n\r\n    // const slot = slots.default?.();\r\n    // const tabList = []\r\n    // if (slot[0].type == Fragment) {\r\n\r\n    // }\r\n    // console.log(\"slots.default\", slots.default?.());\r\n\r\n    return () => {\r\n      // const slot = { selectedIndex: tabApi.selectedIndex.value }\r\n      // const children = slots.default?.(slot)\r\n      const ourProps = {\r\n        role: \"tablist\",\r\n        \"aria-orientation\": tabApi?.orientation.value,\r\n      };\r\n\r\n      return h(\r\n        props.as,\r\n        {\r\n          class: \"tabs-list\",\r\n          ...ourProps,\r\n        },\r\n        [slots.default?.({ ...props })]\r\n      );\r\n    };\r\n  },\r\n});\r\n\r\nexport const LTab = defineComponent({\r\n  name: \"LTab\",\r\n  props: {\r\n    as: { type: [Object, String], default: \"button\" },\r\n    tab: { type: [String], default: \"default\" },\r\n    disabled: { type: [Boolean], default: false },\r\n  },\r\n  setup(props, { attrs, slots, expose }) {\r\n    const tabApi = inject(TabsContext);\r\n    const id = `l-tabs-tab-${useId()}`;\r\n\r\n    const internalTabRef = ref<HTMLElement | null>(null);\r\n\r\n    expose({ el: internalTabRef, $el: internalTabRef });\r\n\r\n    // console.log(\"internalTabRef=\", props.tab);\r\n\r\n    onMounted(() => {\r\n      tabApi?.registerTab(internalTabRef, props.tab);\r\n      if (props.tab == tabApi?.model.value) {\r\n        // tabApi?.setSelectedKey(props.tab);\r\n        handleSelection();\r\n      }\r\n    });\r\n    onUnmounted(() => tabApi?.unregisterTab(internalTabRef, props.tab));\r\n\r\n    const indexTab = computed(() =>\r\n      tabApi?.tabs.value.findIndex((x) => x.tab == internalTabRef.value)\r\n    );\r\n    const selected = computed(() => props.tab === tabApi?.selectedKey.value);\r\n    const focused = computed(() => props.tab === tabApi?.focusedKey.value);\r\n\r\n    const nextTab = (event) => {\r\n      if (tabApi.focusedIndex.value == tabApi?.tabs.value.length - 1) return;\r\n      tabApi.focusedIndex.value = tabApi.focusedIndex.value + 1;\r\n      tabApi.tabs.value[tabApi.focusedIndex.value]?.tab.focus();\r\n\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    };\r\n    const prevTab = (event) => {\r\n      if (tabApi.focusedIndex.value < 1) return;\r\n      tabApi.focusedIndex.value = tabApi?.focusedIndex.value - 1;\r\n      tabApi.tabs.value[tabApi.focusedIndex.value]?.tab.focus();\r\n\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    };\r\n\r\n    function handleKeyDown(event: KeyboardEvent) {\r\n      // const list = tabApi?.tabs.value\r\n      //   .map((tab) => dom(tab))\r\n      //   .filter(Boolean) as HTMLElement[];\r\n\r\n      if (event.key === \"Space\" || event.key === \"Enter\") {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        tabApi?.setSelectedKey(props.tab);\r\n        return;\r\n      }\r\n\r\n      switch (event.key) {\r\n        case \"Home\":\r\n        case \"PageUp\":\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n\r\n          // dom(api.tabs.value[0])?.focus()\r\n          tabApi.tabs.value[0]?.focus();\r\n          // api.setSelectedKey(0)\r\n\r\n          return; // focusIn(list, Focus.First)\r\n\r\n        case \"End\":\r\n        case \"PageDown\":\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n          // dom(tabApi.tabs.value[tabApi.tabs.value.length - 1])?.focus()\r\n          tabApi.tabs.value[tabApi.tabs.value.length - 1]?.focus();\r\n          // tabApi.setSelectedKey(tabApi.tabs.value.length - 1)\r\n          return; // focusIn(list, Focus.Last)\r\n      }\r\n      // console.log(\"Event key=\", event.key);\r\n\r\n      if (tabApi?.orientation.value == \"vertical\") {\r\n        if (event.key === \"ArrowUp\")\r\n          // return focusIn(list, Focus.Previous | Focus.WrapAround);\r\n          prevTab(event);\r\n        if (event.key === \"ArrowDown\")\r\n          // return focusIn(list, Focus.Next | Focus.WrapAround);\r\n          nextTab(event);\r\n        return;\r\n      } else {\r\n        // const indexCurrent = tabApi?.tabs.value.findIndex(\r\n        //   (x) => x.tabData == tabApi.focusedIndex.value\r\n        // );\r\n        // const currentTab =\r\n        //   indexCurrent !== -1 ? tabApi?.tabs.value[indexCurrent] : 0;\r\n        // console.log(\r\n        //   \"Not vertical => index=\",\r\n        //   indexCurrent,\r\n        //   \" tab=\",\r\n        //   currentTab\r\n        // );\r\n\r\n        if (event.key === \"ArrowLeft\") {\r\n          prevTab(event);\r\n          // console.log(\r\n          //   \"focus tab-#\",\r\n          //   tabApi.tabs.value[tabApi.focusedIndex.value]?.tab.focus()\r\n          // );\r\n          // dom(tabApi.tabs.value[tabApi.focusedIndex.value].tab)?.focus();\r\n          // return; // focusIn(list, Focus.Previous | Focus.WrapAround)\r\n        } else if (event.key === \"ArrowRight\") {\r\n          nextTab(event);\r\n          // console.log(\"focus tab-#\", tabApi.focusedIndex.value);\r\n          // dom(tabApi.tabs.value[tabApi.focusedIndex.value].tab)?.focus();\r\n          // console.log(\r\n          //   \"focus tab-#\",\r\n          //   tabApi.tabs.value[tabApi.focusedIndex.value]?.tab.focus()\r\n          // );\r\n          // return; // focusIn(list, Focus.Next | Focus.WrapAround)\r\n          // return;\r\n        }\r\n      }\r\n    }\r\n\r\n    function handleFocus() {\r\n      internalTabRef.value?.focus();\r\n      tabApi.setFocusedIndex(props.tab);\r\n    }\r\n\r\n    /**\r\n     * event click\r\n     */\r\n    function handleSelection() {\r\n      if (props.disabled) return;\r\n\r\n      dom(internalTabRef)?.focus();\r\n      tabApi.setSelectedKey(props.tab);\r\n      tabApi.setFocusedIndex(props.tab);\r\n    }\r\n\r\n    // watch(\r\n    //   () => tabApi?.model.value,\r\n    //   () => {\r\n    //     console.log(\"change model value tabApi?.model=\", tabApi?.model);\r\n    //     // selectedKey.value = props.modelValue;\r\n    //     handleSelection();\r\n    //   }\r\n    // );\r\n\r\n    // This is important because we want to only focus the tab when it gets focus\r\n    // OR it finished the click event (mouseup). However, if you perform a `click`,\r\n    // then you will first get the `focus` and then get the `click` event.\r\n    function handleMouseDown(event: MouseEvent) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    const type = \"button\";\r\n    // useResolveButtonType(\r\n    //   computed(() => ({ as: props.as, type: attrs.type })),\r\n    //   internalTabRef\r\n    // )\r\n    // console.log(\r\n    //   \"tabApi.panels.value[indexTab.value]=\",\r\n    //   tabApi.panels.value[indexTab.value],\r\n    //   \" indexTab.value=\",\r\n    //   indexTab.value\r\n    // );\r\n\r\n    return () => {\r\n      const slot = { selected: selected.value };\r\n\r\n      const ourProps = {\r\n        ref: internalTabRef,\r\n        onKeydown: handleKeyDown,\r\n        onFocus:\r\n          tabApi.activation.value === \"manual\" ? handleFocus : handleSelection,\r\n        onMousedown: handleMouseDown,\r\n        onClick: handleSelection,\r\n        id,\r\n        role: \"tab\",\r\n        type: type.value,\r\n        \"aria-controls\": tabApi.panels.value[indexTab.value]?.value.id,\r\n        \"aria-selected\": selected.value,\r\n        tabIndex: selected.value ? 0 : -1,\r\n        disabled: props.disabled ? true : undefined,\r\n        [\"data-deletable\"]: false,\r\n      };\r\n\r\n      let children = slots.default?.(slot);\r\n      // console.log(\"children\", children);\r\n\r\n      // console.log(children);\r\n\r\n      return h(children[0], {\r\n        ...props,\r\n        ...ourProps,\r\n        selected: selected.value,\r\n      });\r\n    };\r\n  },\r\n});\r\n\r\nexport const LTabPanels = defineComponent({\r\n  name: \"LTabPanels\",\r\n  props: {\r\n    as: { type: [Object, String], default: \"div\" },\r\n  },\r\n  setup(props, { slots, attrs }) {\r\n    const tabApi = inject(TabsContext);\r\n\r\n    return () => {\r\n      const slot = { selectedIndex: tabApi?.selectedIndex.value };\r\n\r\n      return h(\r\n        props.as,\r\n        {\r\n          class: \"tabs-panels\",\r\n        },\r\n        [slots.default?.({ slot })]\r\n      );\r\n      // render({\r\n      //   theirProps: props,\r\n      //   ourProps: {},\r\n      //   slot,\r\n      //   attrs,\r\n      //   slots,\r\n      //   name: \"TabPanels\",\r\n      // });\r\n    };\r\n  },\r\n});\r\n\r\nexport const LTabPanel = defineComponent({\r\n  name: \"LTabPanel\",\r\n  props: {\r\n    as: { type: [Object, String], default: \"div\" },\r\n    static: { type: Boolean, default: false },\r\n    unmount: { type: Boolean, default: true },\r\n  },\r\n  setup(props, { attrs, slots, expose }) {\r\n    const tabApi = inject(TabsContext);\r\n    const id = `l-tabs-panel-${useId()}`;\r\n\r\n    const internalPanelRef = ref<HTMLElement | null>(null);\r\n\r\n    expose({ el: internalPanelRef, $el: internalPanelRef });\r\n\r\n    onMounted(() => tabApi?.registerPanel(internalPanelRef));\r\n    onUnmounted(() => tabApi?.unregisterPanel(internalPanelRef));\r\n\r\n    const myIndex = computed(() =>\r\n      tabApi.panels.value.indexOf(internalPanelRef)\r\n    );\r\n    const selected = computed(\r\n      () => myIndex.value === tabApi.selectedIndex.value\r\n    );\r\n\r\n    return () => {\r\n      const slot = { selected: selected.value };\r\n      const ourProps = {\r\n        ref: internalPanelRef,\r\n        id,\r\n        role: \"tabpanel\",\r\n        \"aria-labelledby\": dom(tabApi.tabs.value[myIndex.value])?.id,\r\n        tabIndex: selected.value ? 0 : -1,\r\n      };\r\n\r\n      if (!selected.value && props.unmount && !props.static) {\r\n        return h(\"div\", {\r\n          ...ourProps,\r\n          style: {\r\n            position: \"fixed\",\r\n            top: 1,\r\n            left: 1,\r\n            width: 1,\r\n            height: 0,\r\n            padding: 0,\r\n            margin: -1,\r\n            overflow: \"hidden\",\r\n            clip: \"rect(0, 0, 0, 0)\",\r\n            whiteSpace: \"nowrap\",\r\n            borderWidth: \"0\",\r\n          },\r\n        });\r\n      }\r\n      return h(\r\n        props.as,\r\n        {\r\n          ...ourProps,\r\n          visible: selected.value,\r\n          // class: Object.assign({}, attrs.class, { hidden: !selected.value }},\r\n        },\r\n        [slots.default?.(slot)]\r\n      );\r\n      // return render({\r\n      //   ourProps,\r\n      //   theirProps: props,\r\n      //   slot,\r\n      //   attrs,\r\n      //   slots,\r\n      //   features: Features.Static | Features.RenderStrategy,\r\n      //   visible: selected.value,\r\n      //   name: \"TabPanel\",\r\n      // });\r\n    };\r\n  },\r\n});\r\n","<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\nexport default defineComponent({\r\n  name: \"FTabs\",\r\n  inheritAttrs: false,\r\n});\r\n</script>\r\n<script setup lang=\"ts\">\r\nimport { computed } from \"vue\";\r\nimport {\r\n  LTabs,\r\n  LTabsList,\r\n  LTab,\r\n  LTabPanels,\r\n  LTabPanel,\r\n} from \"@/components/LTabs\";\r\n\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    /**\r\n     * modelValue - model string\r\n     */\r\n    modelValue: string;\r\n    /**\r\n     * tabs\r\n     */\r\n    tabs: Array<string>;\r\n  }>(),\r\n  {\r\n    modelValue: \"\",\r\n  }\r\n);\r\n\r\nconst emit = defineEmits([\"update:modelValue\", \"on-input\"]);\r\n\r\nconst model = computed({\r\n  get: () => props.modelValue,\r\n  set: (val: string) => {\r\n    emit(\"update:modelValue\", val);\r\n  },\r\n});\r\n</script>\r\n\r\n<template>\r\n  <LTabs v-model=\"model\" manual class=\"mt-2 bg-white dark:bg-s-700\">\r\n    <LTabsList class=\"flex space-x-1\">\r\n      <LTab v-for=\"tab in tabs\" :key=\"tab\" :tab=\"tab\" v-slot=\"{ selected }\">\r\n        <button\r\n          type=\"button\"\r\n          :class=\"[\r\n            'w-full p-2 leading-5 font-medium text-s-900 dark:text-s-300 border-b-2',\r\n            'focus:outline-none ring-offset-1 ring-offset-s-300 ring-opacity-20',\r\n            selected\r\n              ? 'border-p-500 '\r\n              : 'border-transparent text-s-100 hover:bg-black/[0.1] hover:text-black dark:hover:text-white',\r\n          ]\"\r\n        >\r\n          {{ tab }}\r\n        </button>\r\n      </LTab>\r\n    </LTabsList>\r\n    <LTabPanels class=\"flex-auto\">\r\n      <div\r\n        :class=\"[\r\n          'p-3',\r\n          'focus:outline-none focus:ring-1 focus:ring-dott ring-s-200 ring-opacity-20',\r\n        ]\"\r\n      >\r\n        <LTabPanel key=\"Recent\">\r\n          Recent\r\n          <button>Button</button>\r\n        </LTabPanel>\r\n        <LTabPanel key=\"Popular\">\r\n          Popular\r\n          <button>Popular Button</button>\r\n        </LTabPanel>\r\n      </div>\r\n    </LTabPanels>\r\n  </LTabs>\r\n</template>\r\n"],"names":["dom","ref","__name","TabsContext","LTabs","defineComponent","_index","index","props","slots","emit","selectedIndex","focusedIndex","selectedKey","focusedKey","tabs","panels","model","computed","val","tabApi","key","x","tab","tabData","id","idx","panel","provide","h","_a","LTabsList","inject","ourProps","LTab","attrs","expose","useId","internalTabRef","onMounted","handleSelection","onUnmounted","indexTab","selected","nextTab","event","prevTab","handleKeyDown","_b","handleFocus","handleMouseDown","type","slot","children","LTabPanels","LTabPanel","internalPanelRef","myIndex","__default__"],"mappings":"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}