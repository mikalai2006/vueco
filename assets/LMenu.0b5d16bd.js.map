{"version":3,"file":"LMenu.0b5d16bd.js","sources":["../../src/components/LMenu/LMenu.ts"],"sourcesContent":["import { useId } from \"@/composable/useId\";\nimport { nextTick } from \"process\";\nimport { useDom } from \"@/composable/useDom\";\nimport {\n  defineComponent,\n  h,\n  ref,\n  type InjectionKey,\n  type Ref,\n  onMounted,\n  onUnmounted,\n  inject,\n  provide,\n  type PropType,\n  // withModifiers,\n  // Fragment,\n  // cloneVNode,\n} from \"vue\";\n\nfunction useContext(component: string) {\n  const context = inject(MenuContext, null);\n\n  if (context === null) {\n    const err = new Error(\n      `<${component} /> is missing a parent <LMenu /> component.`\n    );\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useContext);\n    throw err;\n  }\n\n  return context;\n}\n\nexport interface IMenuItem {\n  id?: string | number;\n  title?: string;\n  description?: string;\n  group?: string;\n  parentId?: string;\n}\nexport interface IMenuField {\n  title?: string;\n  keyTitle?: string;\n  keyGroup: keyof IMenuItem;\n  items: IMenuItem[];\n}\n\nexport type StateMenuDefinition = {\n  // State\n  id: string;\n  domNode: Ref<HTMLElement | null>;\n  buttonNode: Ref<HTMLElement | null>;\n  menuNode: Ref<HTMLElement | null>;\n  menuItemsNode: Ref<(HTMLElement | null)[]>;\n\n  firstMenuItem: Ref<HTMLElement | null>;\n  lastMenuItem: Ref<HTMLElement | null>;\n  activeItem: Ref<HTMLElement | null>;\n  activeItemIndex: Ref<number>;\n\n  // menuItems: ComputedRef<IMenuItem[]>;\n\n  field: Ref<IMenuField>;\n\n  isOpen: Ref<boolean>;\n\n  registerOverlay: () => void;\n  unRegisterOverlay: () => void;\n  onOpenPopup: () => void;\n  onClosePopup: () => void;\n  onSetFocusToMenuitem: (newMenuitem: HTMLElement | null) => void;\n  onChangeActiveIndex: (e: KeyboardEvent) => void;\n};\n\nexport const MenuContext = Symbol(\n  \"MenuContext\"\n) as InjectionKey<StateMenuDefinition>;\n\nexport const LMenu = defineComponent({\n  name: \"LMenu\",\n  props: {\n    field: {\n      type: Object as PropType<IMenuField>,\n      default: () => {\n        return {};\n      },\n    },\n  },\n  setup(props, { slots }) {\n    const domNode = ref<StateMenuDefinition[\"domNode\"][\"value\"]>(null);\n    const buttonNode = ref<StateMenuDefinition[\"buttonNode\"][\"value\"]>(null);\n    const menuNode = ref<StateMenuDefinition[\"menuNode\"][\"value\"]>(null);\n    const menuItemsNode = ref<StateMenuDefinition[\"menuItemsNode\"][\"value\"]>(\n      []\n    );\n\n    const firstMenuItem =\n      ref<StateMenuDefinition[\"firstMenuItem\"][\"value\"]>(null);\n    const lastMenuItem =\n      ref<StateMenuDefinition[\"lastMenuItem\"][\"value\"]>(null);\n    const activeItem = ref<StateMenuDefinition[\"activeItem\"][\"value\"]>(null);\n    const activeItemIndex =\n      ref<StateMenuDefinition[\"activeItemIndex\"][\"value\"]>(0);\n    const field = ref<StateMenuDefinition[\"field\"][\"value\"]>(props.field);\n    // const menuItems = computed<StateMenuDefinition[\"menuItems\"][\"value\"]>(\n    //   () => props.field.items\n    // );\n\n    const unRegisterOverlay = () => {\n      if (document) {\n        document.removeEventListener(\"click\", onClosePopup);\n        document.removeEventListener(\"keyup\", onClosePopup);\n      }\n    };\n\n    const registerOverlay = () => {\n      if (document) {\n        document.addEventListener(\"click\", onClosePopup);\n        document.addEventListener(\"keyup\", onClosePopup);\n      }\n    };\n\n    const isOpen = ref<StateMenuDefinition[\"isOpen\"][\"value\"]>(false);\n\n    const onOpenPopup = () => {\n      if (!isOpen.value) {\n        registerOverlay();\n      }\n      menu.isOpen.value = true;\n    };\n\n    const onClosePopup = (e: Event) => {\n      const tgt = e?.target as HTMLInputElement | null;\n\n      if (\n        tgt &&\n        (useDom(menu.domNode)?.contains(tgt) ||\n          useDom(menu.menuNode)?.contains(tgt) ||\n          useDom(menu.buttonNode)?.contains(tgt))\n      ) {\n        return;\n      } else {\n        const btn = useDom(menu.buttonNode);\n        btn?.focus();\n      }\n\n      menu.isOpen.value = false;\n\n      unRegisterOverlay();\n    };\n\n    const onSetFocusToMenuitem = (newMenuitem: HTMLElement | null) => {\n      menuItemsNode.value.forEach(function (item) {\n        if (item === newMenuitem) {\n          activeItem.value = newMenuitem;\n          useDom(ref(newMenuitem))?.focus();\n        }\n      });\n    };\n\n    const onChangeActiveIndex = (e: KeyboardEvent) => {\n      let index = menuItemsNode.value.indexOf(activeItem.value);\n      switch (e.key) {\n        case \"Up\":\n        case \"ArrowUp\":\n          index--;\n          break;\n\n        case \"ArrowDown\":\n        case \"Down\":\n          index++;\n          break;\n\n        default:\n          break;\n      }\n\n      onSetFocusToMenuitem(menuItemsNode.value[index]);\n    };\n\n    const idMenu = useId();\n    const id: StateMenuDefinition[\"id\"] = `menu-${idMenu}`;\n\n    const menu = {\n      id,\n\n      domNode,\n      buttonNode,\n      menuNode,\n      menuItemsNode,\n\n      firstMenuItem,\n      lastMenuItem,\n      activeItem,\n      activeItemIndex,\n\n      // menuItems,\n      field,\n\n      isOpen,\n\n      registerOverlay,\n      unRegisterOverlay,\n      onOpenPopup,\n      onClosePopup,\n\n      onSetFocusToMenuitem,\n      onChangeActiveIndex,\n    };\n\n    // onMounted(() => {\n    //   const _firstMenuItem = menuItemsNode.value[0];\n    //   const _lastMenuItem = menuItemsNode.value[menuItemsNode.value.length - 1];\n    //   firstMenuItem.value = _firstMenuItem;\n    //   lastMenuItem.value = _lastMenuItem;\n    // });\n\n    provide(MenuContext, menu);\n\n    return () =>\n      h(\n        \"div\",\n        {\n          ref: domNode,\n          id: `menu-${id}`,\n        },\n\n        {\n          default: () =>\n            slots.default\n              ? slots.default({\n                  isOpen: isOpen.value,\n                })\n              : undefined,\n        }\n      );\n  },\n});\n\n// export const LMenuButton = defineComponent({\n//   props: {\n//     as: {\n//       type: [String, Object],\n//       default: \"button\",\n//     },\n//   },\n//   setup(props, { slots }) {\n//     const menu = useContext(\"LMenuButton\");\n//     // let slotsChild: any = slots.default ? slots.default() : [];\n\n//     onMounted(() => {\n//       // if (typeof props.as == \"object\") {\n//       //   slotsChild = () => Object.values(slots).map((x) => (x ? x() : []));\n//       // }\n//     });\n\n//     return () =>\n//       h(\n//         props.as as string,\n//         {\n//           id: `menu-button-${menu.id}`,\n//           ref: menu.buttonNode,\n//           \"aria-expanded\": menu.isOpen.value,\n//           \"aria-controls\": `menu-list-${menu.id}`,\n//           onKeydown: (e: KeyboardEvent) => {\n//             let flag = false;\n//             switch (e.key) {\n//               case \"Enter\":\n//               case \"ArrowDown\":\n//               case \"Down\":\n//                 menu.onOpenPopup();\n//                 nextTick(() => {\n//                   menu.onSetFocusToMenuitem(menu.firstMenuItem.value);\n//                 });\n//                 flag = true;\n//                 break;\n//               case \"Esc\":\n//               case \"Escape\":\n//                 menu.onClosePopup();\n//                 // menu.buttonNode.value?.focus();\n//                 flag = true;\n//                 break;\n//               case \"Up\":\n//               case \"ArrowUp\":\n//                 menu.onOpenPopup();\n//                 nextTick(() => {\n//                   menu.onSetFocusToMenuitem(menu.lastMenuItem.value);\n//                 });\n//                 flag = true;\n//                 break;\n//               default:\n//                 break;\n//             }\n\n//             if (flag) {\n//               e.stopPropagation();\n//               e.preventDefault();\n//             }\n//           },\n//           onClick: withModifiers(\n//             (e: MouseEvent) => {\n//               if (menu.isOpen.value) {\n//                 menu.onClosePopup();\n//                 // menu.buttonNode.value?.focus();\n//               } else {\n//                 menu.onOpenPopup();\n//                 // this.setFocusToFirstMenuitem();\n//               }\n//               // e.stopPropagation();\n//               // e.preventDefault();\n//             },\n//             [\"stop\"]\n//           ),\n//         },\n//         {\n//           default: () => (slots.default ? slots.default({}) : []),\n//         }\n//       );\n//   },\n// });\n\nexport const LMenuButton = defineComponent({\n  props: {\n    as: {\n      type: [String, Object],\n      default: \"button\",\n    },\n  },\n  inheritAttrs: false,\n  setup(props, { slots, attrs }) {\n    const menu = useContext(\"LMenuButton\");\n    // onMounted(() => {\n    //   // if (props.as == \"template\") {\n    //   //   slotsChild = () => Object.values(slots).map((x) => (x ? x() : []));\n    //   // }\n    // });\n\n    return () => {\n      const _props: any = {\n        id: `menu-button-${menu.id}`,\n        ref: menu.buttonNode,\n        \"aria-expanded\": menu.isOpen.value,\n        \"aria-controls\": `menu-list-${menu.id}`,\n        ...attrs,\n        onKeydown: (e: KeyboardEvent) => {\n          let flag = false;\n          switch (e.key) {\n            case \"Enter\":\n            case \"ArrowDown\":\n            case \"Down\":\n              menu.onOpenPopup();\n              nextTick(() => {\n                menu.onSetFocusToMenuitem(menu.firstMenuItem.value);\n              });\n              flag = true;\n              break;\n            case \"Esc\":\n            case \"Escape\":\n              menu.onClosePopup();\n              // menu.buttonNode.value?.focus();\n              flag = true;\n              break;\n            case \"Up\":\n            case \"ArrowUp\":\n              menu.onOpenPopup();\n              nextTick(() => {\n                menu.onSetFocusToMenuitem(menu.lastMenuItem.value);\n              });\n              flag = true;\n              break;\n            default:\n              break;\n          }\n\n          if (flag) {\n            e.stopPropagation();\n            e.preventDefault();\n          }\n        },\n        onClick: () => {\n          if (menu.isOpen.value) {\n            menu.onClosePopup();\n            // menu.buttonNode.value?.focus();\n          } else {\n            menu.onOpenPopup();\n            // this.setFocusToFirstMenuitem();\n          }\n          // e.stopPropagation();\n          // e.preventDefault();\n        },\n      };\n\n      if (props.as == \"template\") {\n        const _slots = slots.default?.();\n        // console.log(\"_slots\", _slots);\n        const _children = _slots?.length ? _slots[0] : _slots;\n        // console.log(\"_children\", _children);\n        // const newNode = cloneVNode(_children, _props);\n        // console.log(\"newNode\", newNode);\n        return _children ? h(_children, _props) : null;\n      } else {\n        return h(props.as as string, _props, {\n          default: () => (slots.default ? slots.default() : []),\n        });\n      }\n    };\n    // return () =>\n    //   props.as != \"template\"\n    //     ? h(props.as as string, _props, {\n    //         default: () => (slots.default ? slots.default({}) : []),\n    //       })\n    //     : h(newNode, null, {\n    //         default: () => (slots.default ? slots.default({ ..._props }) : []),\n    //       });\n  },\n});\n\nexport const LMenuItems = defineComponent({\n  // props: {},\n  setup(props, { slots, attrs }) {\n    const menu = useContext(\"LMenuItems\");\n    return () =>\n      h(\n        \"div\",\n        {\n          id: `menu-list-${menu.id}`,\n          ref: menu.menuNode,\n          role: \"menu\",\n        },\n        {\n          default: () => (slots.default ? slots.default() : []),\n        }\n      );\n  },\n});\nexport const LMenuItemWrapper = defineComponent({\n  props: {\n    as: {\n      type: [String, Object],\n      default: \"ul\",\n    },\n  },\n  setup(props, { slots }) {\n    return () =>\n      h(\n        props.as as string,\n        {\n          role: \"presentation\",\n        },\n        {\n          default: () => (slots.default ? slots.default() : []),\n        }\n      );\n  },\n});\n\nexport const LMenuItem = defineComponent({\n  props: {\n    // item: {\n    //   type: Object,\n    //   default: () => {\n    //     return {};\n    //   },\n    // },\n    as: {\n      type: [String, Object],\n      default: \"a\",\n    },\n  },\n  setup(props, { slots, attrs }) {\n    const menu = useContext(\"LMenuItem\");\n\n    const menuitemNode = ref<StateMenuDefinition[\"menuNode\"][\"value\"]>(null);\n\n    // const slotDefault = slots.default()[0].children[0];\n    // if (!slotDefault) {\n    //   return;\n    // }\n    onMounted(() => {\n      menu.menuItemsNode.value.push(menuitemNode.value);\n\n      // const _firstMenuItem = menuItemsNode.value[0];\n      // const _lastMenuItem = menuItemsNode.value[menuItemsNode.value.length - 1];\n      if (!menu.firstMenuItem.value) {\n        menu.firstMenuItem.value = menuitemNode.value;\n      }\n      menu.lastMenuItem.value = menuitemNode.value;\n    });\n\n    onUnmounted(() => {\n      const indexMenuitem = menu.menuItemsNode.value.indexOf(\n        menuitemNode.value\n      );\n      menu.menuItemsNode.value.slice(indexMenuitem, 1);\n    });\n\n    return () =>\n      h(\n        props.as as string,\n        {\n          ...attrs,\n          ref: menuitemNode,\n          role: \"menuitem\",\n          tabindex: menuitemNode.value == menu.activeItem.value ? 0 : -1,\n          onKeydown: (e: KeyboardEvent) => {\n            const tgt = e.currentTarget as HTMLElement,\n              key = e.key;\n            let flag = false;\n\n            if (e.ctrlKey || e.altKey || e.metaKey) {\n              return;\n            }\n\n            switch (key) {\n              case \"Enter\":\n                tgt?.click();\n                menu.onClosePopup();\n                flag = true;\n                break;\n\n              case \"Esc\":\n              case \"Escape\":\n                menu.onClosePopup();\n                // menu.buttonNode.value?.focus();\n                flag = true;\n                break;\n\n              case \"Up\":\n              case \"ArrowUp\":\n                menu.onChangeActiveIndex(e);\n                flag = true;\n                break;\n\n              case \"ArrowDown\":\n              case \"Down\":\n                menu.onChangeActiveIndex(e);\n                flag = true;\n                break;\n\n              case \"Home\":\n              case \"PageUp\":\n                menu.onSetFocusToMenuitem(menu.firstMenuItem.value);\n                flag = true;\n                break;\n\n              case \"End\":\n              case \"PageDown\":\n                menu.onSetFocusToMenuitem(menu.lastMenuItem.value);\n                flag = true;\n                break;\n\n              case \"Tab\":\n                menu.onClosePopup();\n                break;\n\n              default:\n                // if (isPrintableCharacter(key)) {\n                //   this.setFocusByFirstCharacter(tgt, key);\n                //   flag = true;\n                // }\n                break;\n            }\n            if (flag) {\n              e.stopPropagation();\n              e.preventDefault();\n            }\n          },\n          onClick: () => {\n            menu.onClosePopup();\n          },\n        },\n        {\n          default: () => (slots.default ? slots.default() : []),\n        }\n        // [h(slotDefault, { role: \"menuitem\",  })]\n      );\n  },\n});\n"],"names":["useContext","component","context","inject","MenuContext","err","__name","LMenu","defineComponent","props","slots","domNode","ref","buttonNode","menuNode","menuItemsNode","firstMenuItem","lastMenuItem","activeItem","activeItemIndex","field","unRegisterOverlay","onClosePopup","registerOverlay","isOpen","onOpenPopup","menu","e","tgt","_a","useDom","_b","_c","btn","onSetFocusToMenuitem","newMenuitem","item","onChangeActiveIndex","index","id","useId","provide","h","LMenuButton","attrs","_props","flag","nextTick","_slots","_children","LMenuItems","LMenuItemWrapper","LMenuItem","menuitemNode","onMounted","onUnmounted","indexMenuitem","key"],"mappings":"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"}