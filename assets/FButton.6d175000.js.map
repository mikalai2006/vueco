{"version":3,"file":"FButton.6d175000.js","sources":["../../src/components/LBtn/LBtn.ts","../../src/components/ui/FButton.vue"],"sourcesContent":["import { h, defineComponent, type PropType } from \"vue\";\n\nexport enum TypeBtnMode {\n  primary = \"primary\",\n  second = \"second\",\n  accent = \"accent\",\n  danger = \"danger\",\n  link = \"link\",\n}\nexport enum TypeBtnTag {\n  a = \"a\",\n  div = \"div\",\n  button = \"button\",\n}\n\nexport const LBtn = defineComponent({\n  name: \"LBtn\",\n  props: {\n    as: {\n      type: String as PropType<keyof typeof TypeBtnTag>,\n      default: \"button\",\n      validator(val: TypeBtnTag) {\n        return [...Object.values(TypeBtnTag)].includes(val);\n      },\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * V-model pressed for pressed mode button\n     */\n    pressed: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emit: [\"update:pressed\"],\n  setup(props, { slots, emit }) {\n    return () =>\n      h(\n        props.as,\n        {\n          role: ![\"button\", \"input\"].includes(props.as) ? \"button\" : undefined,\n          tabindex: ![\"button\", \"input\"].includes(props.as) ? 0 : undefined,\n          type: [\"input\", \"button\"].includes(props.as) ? \"button\" : undefined,\n          \"aria-pressed\": ![\"button\", \"input\"].includes(props.as)\n            ? props.pressed == true\n            : undefined,\n          disabled: props.disabled || undefined,\n          onClick: () => {\n            !props.disabled && emit(\"update:pressed\", !props.pressed);\n            console.log(\"click\");\n          },\n          onKeydown: (e: KeyboardEvent) => {\n            (e.key === \"Space\" || e.key === \"Enter\") &&\n              !props.disabled &&\n              emit(\"update:pressed\", !props.pressed);\n          },\n        },\n        slots.default ? slots.default() : []\n      );\n  },\n});\n","<script lang=\"ts\" setup>\nimport { computed, type PropType } from \"vue\";\nimport { LBtn, TypeBtnTag, TypeBtnMode } from \"@/components/LBtn\";\n\nconst props = defineProps({\n  as: {\n    type: String as PropType<TypeBtnTag>,\n    default: \"button\",\n    validator(val: TypeBtnTag) {\n      return [...Object.values(TypeBtnTag)].includes(val);\n    },\n  },\n  mode: {\n    type: String as PropType<TypeBtnMode>,\n    default: TypeBtnMode.second,\n    validator(val: TypeBtnMode) {\n      return [...Object.values(TypeBtnMode)].includes(val);\n    },\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  pressed: {\n    type: Boolean,\n    default: false,\n  },\n  fill: {\n    type: Boolean,\n    default: false,\n  },\n});\ndefineEmits([\"update:pressed\"]);\n\nconst cssClass = computed(() => {\n  let _class =\n    \"relative py-2 px-4 font-medium b-rounded outline-none cursor-pointer transition focus:ring-2 focus:ring-offset-2 focus:ring-offset-white dark:focus:ring-offset-s-900\";\n  switch (props.mode as keyof typeof TypeBtnMode) {\n    case TypeBtnMode.primary:\n      _class +=\n        \" ring-p-500\" +\n        (props.fill\n          ? \" bg-p-500 dark:bg-p-700 text-white hover:bg-p-400 hover:bg-p-600 dark:hover:bg-p-600\"\n          : \" bg-p-500/10 text-p-700 dark:text-p-400 hover:bg-p-500/30\");\n      break;\n    case TypeBtnMode.second:\n      _class +=\n        \" ring-s-500\" +\n        (props.fill\n          ? \" bg-s-500 dark:bg-s-700 text-white hover:bg-s-600 dark:hover:bg-s-600\"\n          : \" bg-s-500/10 text-s-700 dark:text-s-400 hover:bg-s-500/30\");\n      break;\n    case TypeBtnMode.danger:\n      _class +=\n        \" ring-d-500\" +\n        (props.fill\n          ? \" bg-d-600 dark:bg-d-700 text-white hover:bg-d-700 dark:hover:bg-d-600\"\n          : \" bg-d-600/10 text-d-700 dark:text-d-400 hover:bg-d-500/30\");\n      break;\n    case TypeBtnMode.link:\n      _class += \" ring-s-500/10 hover:bg-s-500/10\";\n      break;\n\n    default:\n      break;\n  }\n  if (props.pressed) {\n    _class += \" shadow-inner\";\n  }\n  return _class;\n});\n</script>\n\n<template>\n  <LBtn\n    v-ripple=\"{ class: 'bg-black/50' }\"\n    v-bind=\"{ disabled, pressed, as }\"\n    :class=\"[\n      cssClass,\n      {\n        'cursor-not-allowed !bg-s-50 dark:!bg-s-800 !text-s-500': disabled,\n      },\n    ]\"\n    @click=\"$emit('update:pressed', !pressed)\"\n  >\n    <span class=\"relative\">\n      <slot></slot>\n    </span>\n  </LBtn>\n</template>\n"],"names":["TypeBtnMode","TypeBtnTag","LBtn","defineComponent","val","props","slots","emit","h","e","cssClass","computed","_class"],"mappings":"+HAEY,IAAAA,GAAAA,IACVA,EAAA,QAAU,UACVA,EAAA,OAAS,SACTA,EAAA,OAAS,SACTA,EAAA,OAAS,SACTA,EAAA,KAAO,OALGA,IAAAA,GAAA,CAAA,CAAA,EAOAC,GAAAA,IACVA,EAAA,EAAI,IACJA,EAAA,IAAM,MACNA,EAAA,OAAS,SAHCA,IAAAA,GAAA,CAAA,CAAA,EAML,MAAMC,EAAOC,EAAgB,CAClC,KAAM,OACN,MAAO,CACL,GAAI,CACF,KAAM,OACN,QAAS,SACT,UAAUC,EAAiB,CAClB,MAAA,CAAC,GAAG,OAAO,OAAOH,CAAU,CAAC,EAAE,SAASG,CAAG,CACpD,CACF,EACA,SAAU,CACR,KAAM,QACN,QAAS,EACX,EAIA,QAAS,CACP,KAAM,QACN,QAAS,EACX,CACF,EACA,KAAM,CAAC,gBAAgB,EACvB,MAAMC,EAAO,CAAE,MAAAC,EAAO,KAAAC,GAAQ,CAC5B,MAAO,IACLC,EACEH,EAAM,GACN,CACE,KAAO,CAAC,SAAU,OAAO,EAAE,SAASA,EAAM,EAAE,EAAe,OAAX,SAChD,SAAW,CAAC,SAAU,OAAO,EAAE,SAASA,EAAM,EAAE,EAAQ,OAAJ,EACpD,KAAM,CAAC,QAAS,QAAQ,EAAE,SAASA,EAAM,EAAE,EAAI,SAAW,OAC1D,eAAiB,CAAC,SAAU,OAAO,EAAE,SAASA,EAAM,EAAE,EAElD,OADAA,EAAM,SAAW,GAErB,SAAUA,EAAM,UAAY,OAC5B,QAAS,IAAM,CACb,CAACA,EAAM,UAAYE,EAAK,iBAAkB,CAACF,EAAM,OAAO,EACxD,QAAQ,IAAI,OAAO,CACrB,EACA,UAAYI,GAAqB,EAC9BA,EAAE,MAAQ,SAAWA,EAAE,MAAQ,UAC9B,CAACJ,EAAM,UACPE,EAAK,iBAAkB,CAACF,EAAM,OAAO,CACzC,CACF,EACAC,EAAM,QAAUA,EAAM,UAAY,CAAC,CAAA,CAEzC,CACF,CAAC,uXC7BKI,EAAWC,EAAS,IAAM,CAC9B,IAAIC,EACF,wKACF,OAAQP,EAAM,KAAkC,CAC9C,KAAKL,EAAY,QAEbY,GAAA,eACCP,EAAM,KACH,uFACA,6DACN,MACF,KAAKL,EAAY,OAEbY,GAAA,eACCP,EAAM,KACH,wEACA,6DACN,MACF,KAAKL,EAAY,OAEbY,GAAA,eACCP,EAAM,KACH,wEACA,6DACN,MACF,KAAKL,EAAY,KACLY,GAAA,mCACV,KAIJ,CACA,OAAIP,EAAM,UACEO,GAAA,iBAELA,CAAA,CACR"}