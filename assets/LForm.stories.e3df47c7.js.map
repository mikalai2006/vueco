{"version":3,"file":"LForm.stories.e3df47c7.js","sources":["../../src/components/ui/FTextarea.vue","../../src/components/ui/FCheckbox.vue","../../src/components/ui/FNumber.vue"],"sourcesContent":["<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  name: \"FTextarea\",\n  inheritAttrs: false,\n});\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\";\nimport { LInputTextarea } from \"@/components/LInput\";\nimport type { IField } from \"@/components/LForm\";\nimport FError from \"./FError.vue\";\n\nconst props = withDefaults(\n  defineProps<{\n    /**\n     * modelValue - model string\n     */\n    modelValue: string;\n    error?: string;\n    /**\n     * Schema for field.\n     */\n    field: IField;\n    required?: boolean;\n  }>(),\n  {\n    modelValue: \"\",\n  }\n);\n\nconst emit = defineEmits([\"update:modelValue\", \"on-input\"]);\n\nconst model = computed({\n  get: () => props.modelValue,\n  set: (val: string) => {\n    emit(\"update:modelValue\", val);\n  },\n});\n\nconst inputElement = ref<InstanceType<typeof LInputTextarea> | null>(null);\n\nconst onSetFocus = () => {\n  const el = inputElement.value?.$el;\n\n  if (el && el?.input) el?.input.focus();\n};\n\nconst onReset = () => {\n  model.value = \"\";\n  emit(\"on-input\");\n  onSetFocus();\n};\n</script>\n\n<template>\n  <slot\n    name=\"label\"\n    :id=\"field.id\"\n    :required=\"required\"\n    :onSetFocus=\"onSetFocus\"\n  ></slot>\n  <div\n    class=\"flex items-center\"\n    :class=\"[\n      'rounded-md border text-base transition w-full appearance-none outline-none focus-within:ring-1 placeholder-s-400 dark:placeholder-s-400 bg-white dark:bg-s-900',\n      {\n        'border-d-500 dark:border-d-500 focus-within:ring-d-500 focus-within:border-d-500 hover:ring-d-500':\n          error,\n      },\n      {\n        'border-s-200 dark:border-s-600 focus-within:ring-p-500 focus-within:border-p-500 hover:ring-p-500 hover:border-p-500':\n          !error,\n      },\n    ]\"\n  >\n    <slot name=\"before\" :onReset=\"onReset\"></slot>\n    <LInputTextarea\n      v-bind=\"$attrs\"\n      ref=\"inputElement\"\n      v-model=\"model\"\n      :field=\"field\"\n      :error=\"error\"\n      class=\"flex-auto outline-none px-4 py-2 bg-transparent\"\n      @input=\"emit('on-input')\"\n    />\n    <slot name=\"after\" :onReset=\"onReset\"></slot>\n  </div>\n  <slot name=\"error\">\n    <FError :error=\"error\" />\n  </slot>\n  <slot name=\"description\"></slot>\n</template>\n","<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"FCheckbox\",\n  inheritAttrs: false,\n});\n</script>\n<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\";\nimport type { IField } from \"@/components/LForm\";\n\nimport { LInputCheckbox } from \"@/components/LInput\";\nimport { LIcon } from \"@/components/LIcon\";\n\nconst props = withDefaults(\n  defineProps<{\n    /**\n     * modelValue - model boolean\n     */\n    modelValue: boolean;\n    error?: string;\n    /**\n     * Schema for field.\n     */\n    field: IField;\n    required?: boolean;\n  }>(),\n  {\n    modelValue: false,\n  }\n);\n\nconst emit = defineEmits([\"update:modelValue\", \"on-input\"]);\n\nconst model = computed({\n  get: () => props.modelValue,\n  set: (val: boolean) => {\n    emit(\"update:modelValue\", val);\n  },\n});\n\nconst inputElement = ref<InstanceType<typeof LInputCheckbox> | null>(null);\n\nconst onSetFocus = () => {\n  const el = inputElement.value?.$el;\n\n  if (el && el?.input) el?.input.focus();\n};\n\nconst onReset = () => {\n  model.value = false;\n  emit(\"on-input\");\n  onSetFocus();\n};\n</script>\n<template>\n  <div class=\"relative flex items-start\">\n    <slot name=\"before\" :onReset=\"onReset\"></slot>\n    <div class=\"flex items-center\">\n      <LInputCheckbox\n        v-bind=\"$attrs\"\n        ref=\"inputElement\"\n        v-model=\"model\"\n        :field=\"field\"\n        :error=\"error\"\n        :checked=\"!!model\"\n        class=\"mr-2 h-5 w-5 appearance-none outline-none group focus:ring-2 focus:ring-offset-2 border rounded-md focus:ring-offset-white dark:focus:ring-offset-s-800 checked:bg-p-500\"\n        :class=\"[\n          {\n            'border-d-500 dark:border-d-500 focus:ring-d-500 focus:border-d-500 hover:ring-d-500':\n              error,\n          },\n          {\n            'border-s-200 dark:border-s-600 focus:ring-p-500 focus:border-p-500 hover:ring-p-500 hover:border-p-500':\n              !error,\n          },\n        ]\"\n        @change=\"$emit('on-input')\"\n      >\n        <LIcon\n          v-if=\"model\"\n          class=\"bg-transparent absolute top-0 left-0 text-white text-xl\"\n        >\n          M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0\n          1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093\n          3.473-4.425a.267.267 0 0 1 .02-.022z\n        </LIcon>\n      </LInputCheckbox>\n    </div>\n    <div>\n      <slot\n        name=\"label\"\n        :id=\"field.id\"\n        :required=\"required\"\n        :onSetFocus=\"onSetFocus\"\n      ></slot>\n      <slot name=\"after\" :onReset=\"onReset\"></slot>\n      <slot name=\"error\"></slot>\n      <slot name=\"description\"></slot>\n    </div>\n  </div>\n</template>\n","<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"FNumber\",\n  inheritAttrs: false,\n});\n</script>\n<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\";\n\nimport { LInputNumber } from \"@/components/LInput\";\nimport type { IField } from \"@/components/LForm\";\nimport FError from \"./FError.vue\";\n\nconst props = withDefaults(\n  defineProps<{\n    /**\n     * modelValue - model number\n     */\n    modelValue: number;\n    error?: string;\n    /**\n     * Schema for field.\n     */\n    field: IField;\n    required?: boolean;\n  }>(),\n  {\n    modelValue: 0,\n  }\n);\n\nconst emit = defineEmits([\"update:modelValue\", \"on-input\"]);\n\nconst model = computed({\n  get: () => props.modelValue,\n  set: (val: number) => {\n    emit(\"update:modelValue\", +val);\n  },\n});\n\nconst inputElement = ref<InstanceType<typeof LInputNumber> | null>(null);\n\nconst onSetFocus = () => {\n  const el = inputElement.value?.$el;\n  if (el) el.focus();\n};\n\nconst onReset = () => {\n  model.value = 0;\n  emit(\"on-input\");\n  onSetFocus();\n};\n</script>\n\n<template>\n  <slot\n    name=\"label\"\n    :id=\"field.id\"\n    :required=\"required\"\n    :onSetFocus=\"onSetFocus\"\n  ></slot>\n  <div\n    class=\"flex items-center\"\n    :class=\"[\n      'rounded-md border text-base transition w-full appearance-none outline-none focus-within:ring-1 hover:ring-1 bg-white dark:bg-s-900',\n      {\n        'border-d-500 dark:border-d-500 focus-within:ring-d-500 focus-within:border-d-500 hover:ring-d-500':\n          error,\n      },\n      {\n        'border-s-200 dark:border-s-600 focus-within:ring-p-500 focus-within:border-p-500 hover:ring-p-500 hover:border-p-500':\n          !error,\n      },\n    ]\"\n  >\n    <slot name=\"before\" :onReset=\"onReset\"></slot>\n    <LInputNumber\n      v-bind=\"$attrs\"\n      ref=\"inputElement\"\n      v-model=\"model\"\n      :field=\"field\"\n      :error=\"error\"\n      class=\"outline-none px-4 py-2 bg-transparent w-full placeholder-s-400\"\n      @input=\"$emit('on-input')\"\n    />\n    <slot name=\"after\" :onReset=\"onReset\"></slot>\n  </div>\n  <slot name=\"error\">\n    <FError :error=\"error\" />\n  </slot>\n  <slot name=\"description\"></slot>\n</template>\n"],"names":["__default__","defineComponent","model","computed","props","val","emit","inputElement","ref","onSetFocus","__name","el","_a","onReset"],"mappings":"krBAGA,MAAAA,EAAeC,EAAgB,CAC7B,KAAM,YACN,aAAc,EAChB,CAAC,6JA6BKC,EAAQC,EAAS,CACrB,IAAK,IAAMC,EAAM,WACjB,IAAMC,GAAgB,CACpBC,EAAK,oBAAqBD,CAAG,CAC/B,CAAA,CACD,EAEKE,EAAeC,EAAgD,IAAI,EAEnEC,EAAaC,EAAA,IAAM,OACjB,MAAAC,GAAKC,EAAAL,EAAa,QAAb,YAAAK,EAAoB,IAE3BD,IAAMA,GAAA,YAAAA,EAAI,SAAOA,GAAA,MAAAA,EAAI,MAAM,QAAM,EAHpB,cAMbE,EAAUH,EAAA,IAAM,CACpBR,EAAM,MAAQ,GACdI,EAAK,UAAU,EACJG,GAAA,EAHG,+zDChDhBT,EAAeC,EAAgB,CAC7B,KAAM,YACN,aAAc,EAChB,CAAC,0KA6BKC,EAAQC,EAAS,CACrB,IAAK,IAAMC,EAAM,WACjB,IAAMC,GAAiB,CACrBC,EAAK,oBAAqBD,CAAG,CAC/B,CAAA,CACD,EAEKE,EAAeC,EAAgD,IAAI,EAEnEC,EAAaC,EAAA,IAAM,OACjB,MAAAC,GAAKC,EAAAL,EAAa,QAAb,YAAAK,EAAoB,IAE3BD,IAAMA,GAAA,YAAAA,EAAI,SAAOA,GAAA,MAAAA,EAAI,MAAM,QAAM,EAHpB,cAMbE,EAAUH,EAAA,IAAM,CACpBR,EAAM,MAAQ,GACdI,EAAK,UAAU,EACJG,GAAA,EAHG,y8DC/ChB,MAAAT,GAAeC,EAAgB,CAC7B,KAAM,UACN,aAAc,EAChB,CAAC,6JA6BKC,EAAQC,EAAS,CACrB,IAAK,IAAMC,EAAM,WACjB,IAAMC,GAAgB,CACfC,EAAA,oBAAqB,CAACD,CAAG,CAChC,CAAA,CACD,EAEKE,EAAeC,EAA8C,IAAI,EAEjEC,EAAaC,EAAA,IAAM,OACjB,MAAAC,GAAKC,EAAAL,EAAa,QAAb,YAAAK,EAAoB,IAC3BD,GAAIA,EAAG,MAAM,CAAA,EAFA,cAKbE,EAAUH,EAAA,IAAM,CACpBR,EAAM,MAAQ,EACdI,EAAK,UAAU,EACJG,GAAA,EAHG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}